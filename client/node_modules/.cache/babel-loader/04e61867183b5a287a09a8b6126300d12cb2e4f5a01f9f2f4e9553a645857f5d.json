{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, VStack, HStack, FormControl, FormLabel, Input, Select, Button, Text, useToast, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatGroup, Circle, Flex } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,\n  // 4.25 light years\n  'Alpha Centauri A': 271909.7,\n  // 4.3 light years\n  'Alpha Centauri B': 271909.7,\n  // 4.3 light years\n  'Barnard\\'s Star': 379446.6,\n  // 6.0 light years\n  'Wolf 359': 474308.3,\n  // 7.5 light years\n  'Lalande 21185': 515521.8,\n  // 8.15 light years\n  'Sirius A': 537549.4,\n  // 8.5 light years\n  'Sirius B': 537549.4,\n  // 8.5 light years\n\n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1e': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1f': 2529644.0,\n  // 40 light years\n  'Kepler-186f': 3099814.0,\n  // 49 light years\n  'TOI-700d': 6324110.0,\n  // 100 light years\n\n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,\n  // 625 light years\n  'Vega': 158102750.0,\n  // 2500 light years\n  'Antares': 316205500.0,\n  // 5000 light years\n  'Deneb': 474308250.0,\n  // 7500 light years\n\n  // Galactic Features\n  'Orion Nebula': 853754850.0,\n  // 13,500 light years\n  'Galactic Center': 1580275000.0,\n  // 25,000 light years\n  'LMC': 3162055000.0 // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\n// Add planet colors mapping\nconst PLANET_COLORS = {\n  Mercury: 'gray.400',\n  Venus: 'yellow.200',\n  Earth: 'blue.400',\n  Mars: 'red.500',\n  Jupiter: 'orange.300',\n  Saturn: 'yellow.500',\n  Uranus: 'teal.300',\n  Neptune: 'blue.500',\n  'Proxima Centauri b': 'red.300',\n  'Alpha Centauri A': 'yellow.400',\n  'Alpha Centauri B': 'orange.400',\n  'Barnard\\'s Star': 'red.600',\n  'Wolf 359': 'red.400',\n  'Lalande 21185': 'orange.500',\n  'Sirius A': 'white',\n  'Sirius B': 'gray.100',\n  'TRAPPIST-1d': 'purple.300',\n  'TRAPPIST-1e': 'purple.400',\n  'TRAPPIST-1f': 'purple.500',\n  'Kepler-186f': 'green.400',\n  'TOI-700d': 'cyan.400',\n  'Betelgeuse': 'red.700',\n  'Vega': 'blue.200',\n  'Antares': 'red.800',\n  'Deneb': 'white',\n  'Orion Nebula': 'purple.200',\n  'Galactic Center': 'black',\n  'LMC': 'blue.100'\n};\n\n// Add planet sizes mapping (relative sizes for visualization)\nconst PLANET_SIZES = {\n  Mercury: 16,\n  Venus: 20,\n  Earth: 20,\n  Mars: 18,\n  Jupiter: 40,\n  Saturn: 35,\n  Uranus: 25,\n  Neptune: 25,\n  'Proxima Centauri b': 22,\n  'Alpha Centauri A': 30,\n  'Alpha Centauri B': 28,\n  'Barnard\\'s Star': 25,\n  'Wolf 359': 20,\n  'Lalande 21185': 22,\n  'Sirius A': 35,\n  'Sirius B': 15,\n  'TRAPPIST-1d': 20,\n  'TRAPPIST-1e': 20,\n  'TRAPPIST-1f': 20,\n  'Kepler-186f': 22,\n  'TOI-700d': 22,\n  'Betelgeuse': 45,\n  'Vega': 30,\n  'Antares': 45,\n  'Deneb': 40,\n  'Orion Nebula': 50,\n  'Galactic Center': 55,\n  'LMC': 60\n};\nexport const TradePanel = () => {\n  _s();\n  const [form, setForm] = useState({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 1,\n    paymentType: 'upfront'\n  });\n  const [calculation, setCalculation] = useState(null);\n  const toast = useToast();\n  const calculateTradeParameters = (distance, paymentType) => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792.458; // km/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO; // km/s\n    const AU_TO_KM = 149597870.7; // 1 AU in km\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const DAYS_PER_YEAR = 365.25;\n    const distanceKm = distance * AU_TO_KM;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceKm / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate years for interest rates\n    const earthYears = earthTimeDays / DAYS_PER_YEAR;\n    const shipYears = shipTimeDays / DAYS_PER_YEAR;\n\n    // Calculate interest rates based on payment type\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment, calculate compound interest over Earth time\n      // The buyer pays now, so they lose potential investment returns over Earth time\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      // The seller waits longer in their frame, so they charge more interest\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears * timeDilationFactor) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = Math.max(1, form.quantity) * 1000; // Base cost per unit, minimum 1 unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n    return {\n      distance,\n      earthTimeDays,\n      shipTimeDays,\n      timeDilationFactor,\n      effectiveInterestRate,\n      totalCost\n    };\n  };\n  const handleSubmit = async () => {\n    if (form.quantity <= 0) {\n      toast({\n        title: 'Invalid Quantity',\n        description: 'Please enter a quantity greater than 0',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n      return;\n    }\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n\n    // Send calculation details to the chat interface\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: '!explain_calculation:' + JSON.stringify({\n            sourcePlanet: form.sourcePlanet,\n            destinationPlanet: form.destinationPlanet,\n            distance,\n            travelTime: result.travelTime,\n            shipTime: result.shipTime,\n            timeDilation: result.timeDilation,\n            interestRate: result.interestRate,\n            totalCost: result.totalCost,\n            paymentType: form.paymentType,\n            goods: form.goods,\n            quantity: form.quantity\n          })\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send calculation details');\n      }\n      toast({\n        title: 'Trade Calculation Complete',\n        description: 'Calculation details have been sent to the chat.',\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Failed to send calculation details:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to send calculation details to chat',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"xl\",\n    boxShadow: \"lg\",\n    h: \"100%\",\n    overflowY: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        h: \"150px\",\n        bg: \"gray.900\",\n        borderRadius: \"xl\",\n        mb: 4,\n        position: \"relative\",\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          bgImage: \"radial-gradient(white 1px, transparent 1px)\",\n          backgroundSize: \"15px 15px\",\n          opacity: 0.2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          h: \"100%\",\n          justify: \"space-around\",\n          align: \"center\",\n          position: \"relative\",\n          px: 8,\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              size: `${PLANET_SIZES[form.sourcePlanet]}px`,\n              bg: PLANET_COLORS[form.sourcePlanet],\n              boxShadow: \"0 0 20px rgba(255,255,255,0.2)\",\n              border: \"2px solid rgba(255,255,255,0.2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"white\",\n              fontSize: \"sm\",\n              fontWeight: \"medium\",\n              children: form.sourcePlanet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100px\",\n            h: \"2px\",\n            bg: \"blue.400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              size: `${PLANET_SIZES[form.destinationPlanet]}px`,\n              bg: PLANET_COLORS[form.destinationPlanet],\n              boxShadow: \"0 0 20px rgba(255,255,255,0.2)\",\n              border: \"2px solid rgba(255,255,255,0.2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"white\",\n              fontSize: \"sm\",\n              fontWeight: \"medium\",\n              children: form.destinationPlanet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: 2,\n        children: \"Interstellar Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Source Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.sourcePlanet,\n            onChange: e => {\n              setForm({\n                ...form,\n                sourcePlanet: e.target.value\n              });\n            },\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), form.sourcePlanet && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            color: \"gray.600\",\n            mt: 1,\n            children: CELESTIAL_BODY_INFO[form.sourcePlanet]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Destination Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.destinationPlanet,\n            onChange: e => {\n              setForm({\n                ...form,\n                destinationPlanet: e.target.value\n              });\n            },\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), form.destinationPlanet && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            color: \"gray.600\",\n            mt: 1,\n            children: CELESTIAL_BODY_INFO[form.destinationPlanet]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Goods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: form.goods,\n          onChange: e => setForm({\n            ...form,\n            goods: e.target.value\n          }),\n          placeholder: \"Enter goods description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"1\",\n            value: form.quantity,\n            onChange: e => setForm({\n              ...form,\n              quantity: Math.max(1, Number(e.target.value))\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.paymentType,\n            onChange: e => setForm({\n              ...form,\n              paymentType: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"upfront\",\n              children: \"Pay Upfront\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"on_delivery\",\n              children: \"Pay on Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"lg\",\n        onClick: handleSubmit,\n        mt: 4,\n        children: \"Calculate Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), calculation && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        p: 4,\n        borderRadius: \"md\",\n        bg: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(StatGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.distance.toFixed(2), \" AU\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Astronomical Units\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Earth Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.travelTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"In stationary frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Ship Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.shipTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Due to time dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Time Dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.timeDilation.toFixed(4), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Relativistic factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [(calculation.interestRate * 100).toFixed(4), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.totalCost.toFixed(2), \" credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Including interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(TradePanel, \"MaYmtlmKc/XBndEpnE+V0CkMhHE=\", false, function () {\n  return [useToast];\n});\n_c = TradePanel;\nvar _c;\n$RefreshReg$(_c, \"TradePanel\");","map":{"version":3,"names":["React","useState","Box","VStack","HStack","FormControl","FormLabel","Input","Select","Button","Text","useToast","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatGroup","Circle","Flex","jsxDEV","_jsxDEV","PLANET_DISTANCES","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","CELESTIAL_BODY_INFO","PLANET_COLORS","PLANET_SIZES","TradePanel","_s","form","setForm","sourcePlanet","destinationPlanet","goods","quantity","paymentType","calculation","setCalculation","toast","calculateTradeParameters","distance","SPEED_OF_LIGHT","SHIP_SPEED_RATIO","SHIP_SPEED","AU_TO_KM","SECONDS_PER_DAY","DAYS_PER_YEAR","distanceKm","timeDilationFactor","Math","sqrt","pow","earthTimeSeconds","shipTimeSeconds","earthTimeDays","shipTimeDays","earthYears","shipYears","BASE_INTEREST_RATE","effectiveInterestRate","baseCost","max","totalCost","handleSubmit","title","description","status","duration","isClosable","sourceDistance","destDistance","abs","result","response","fetch","method","headers","body","JSON","stringify","message","travelTime","shipTime","timeDilation","interestRate","ok","Error","error","console","p","bg","borderRadius","boxShadow","h","overflowY","children","spacing","align","w","mb","position","overflow","top","left","right","bottom","bgImage","backgroundSize","opacity","fileName","_jsxFileName","lineNumber","columnNumber","justify","px","size","border","color","fontSize","fontWeight","value","onChange","e","target","Object","keys","map","planet","mt","placeholder","type","min","Number","colorScheme","onClick","toFixed","_c","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Text,\n  useToast,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatGroup,\n  ScaleFade,\n  Circle,\n  Flex,\n} from '@chakra-ui/react';\n\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES: Record<string, number> = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  \n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,  // 4.25 light years\n  'Alpha Centauri A': 271909.7,    // 4.3 light years\n  'Alpha Centauri B': 271909.7,    // 4.3 light years\n  'Barnard\\'s Star': 379446.6,     // 6.0 light years\n  'Wolf 359': 474308.3,            // 7.5 light years\n  'Lalande 21185': 515521.8,       // 8.15 light years\n  'Sirius A': 537549.4,            // 8.5 light years\n  'Sirius B': 537549.4,            // 8.5 light years\n  \n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,       // 40 light years\n  'TRAPPIST-1e': 2529644.0,       // 40 light years\n  'TRAPPIST-1f': 2529644.0,       // 40 light years\n  'Kepler-186f': 3099814.0,       // 49 light years\n  'TOI-700d': 6324110.0,          // 100 light years\n  \n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,       // 625 light years\n  'Vega': 158102750.0,            // 2500 light years\n  'Antares': 316205500.0,         // 5000 light years\n  'Deneb': 474308250.0,           // 7500 light years\n  \n  // Galactic Features\n  'Orion Nebula': 853754850.0,    // 13,500 light years\n  'Galactic Center': 1580275000.0, // 25,000 light years\n  'LMC': 3162055000.0,            // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO: Record<string, string> = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\n// Add planet colors mapping\nconst PLANET_COLORS: Record<string, string> = {\n  Mercury: 'gray.400',\n  Venus: 'yellow.200',\n  Earth: 'blue.400',\n  Mars: 'red.500',\n  Jupiter: 'orange.300',\n  Saturn: 'yellow.500',\n  Uranus: 'teal.300',\n  Neptune: 'blue.500',\n  'Proxima Centauri b': 'red.300',\n  'Alpha Centauri A': 'yellow.400',\n  'Alpha Centauri B': 'orange.400',\n  'Barnard\\'s Star': 'red.600',\n  'Wolf 359': 'red.400',\n  'Lalande 21185': 'orange.500',\n  'Sirius A': 'white',\n  'Sirius B': 'gray.100',\n  'TRAPPIST-1d': 'purple.300',\n  'TRAPPIST-1e': 'purple.400',\n  'TRAPPIST-1f': 'purple.500',\n  'Kepler-186f': 'green.400',\n  'TOI-700d': 'cyan.400',\n  'Betelgeuse': 'red.700',\n  'Vega': 'blue.200',\n  'Antares': 'red.800',\n  'Deneb': 'white',\n  'Orion Nebula': 'purple.200',\n  'Galactic Center': 'black',\n  'LMC': 'blue.100',\n};\n\n// Add planet sizes mapping (relative sizes for visualization)\nconst PLANET_SIZES: Record<string, number> = {\n  Mercury: 16,\n  Venus: 20,\n  Earth: 20,\n  Mars: 18,\n  Jupiter: 40,\n  Saturn: 35,\n  Uranus: 25,\n  Neptune: 25,\n  'Proxima Centauri b': 22,\n  'Alpha Centauri A': 30,\n  'Alpha Centauri B': 28,\n  'Barnard\\'s Star': 25,\n  'Wolf 359': 20,\n  'Lalande 21185': 22,\n  'Sirius A': 35,\n  'Sirius B': 15,\n  'TRAPPIST-1d': 20,\n  'TRAPPIST-1e': 20,\n  'TRAPPIST-1f': 20,\n  'Kepler-186f': 22,\n  'TOI-700d': 22,\n  'Betelgeuse': 45,\n  'Vega': 30,\n  'Antares': 45,\n  'Deneb': 40,\n  'Orion Nebula': 50,\n  'Galactic Center': 55,\n  'LMC': 60,\n};\n\nexport const TradePanel: React.FC = () => {\n  const [form, setForm] = useState<TradeForm>({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 1,\n    paymentType: 'upfront',\n  });\n\n  const [calculation, setCalculation] = useState<{\n    distance: number;\n    travelTime: number;\n    shipTime: number;\n    interestRate: number;\n    totalCost: number;\n    timeDilation: number;\n  } | null>(null);\n\n  const toast = useToast();\n\n  const calculateTradeParameters = (distance: number, paymentType: 'upfront' | 'on_delivery') => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792.458; // km/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO; // km/s\n    const AU_TO_KM = 149597870.7; // 1 AU in km\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const DAYS_PER_YEAR = 365.25;\n    \n    const distanceKm = distance * AU_TO_KM;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceKm / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate years for interest rates\n    const earthYears = earthTimeDays / DAYS_PER_YEAR;\n    const shipYears = shipTimeDays / DAYS_PER_YEAR;\n\n    // Calculate interest rates based on payment type\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n    let effectiveInterestRate;\n    \n    if (paymentType === 'upfront') {\n      // For upfront payment, calculate compound interest over Earth time\n      // The buyer pays now, so they lose potential investment returns over Earth time\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      // The seller waits longer in their frame, so they charge more interest\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears * timeDilationFactor) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = Math.max(1, form.quantity) * 1000; // Base cost per unit, minimum 1 unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n\n    return {\n      distance,\n      earthTimeDays,\n      shipTimeDays,\n      timeDilationFactor,\n      effectiveInterestRate,\n      totalCost,\n    };\n  };\n\n  const handleSubmit = async () => {\n    if (form.quantity <= 0) {\n      toast({\n        title: 'Invalid Quantity',\n        description: 'Please enter a quantity greater than 0',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    \n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n    \n    // Send calculation details to the chat interface\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: '!explain_calculation:' + JSON.stringify({\n            sourcePlanet: form.sourcePlanet,\n            destinationPlanet: form.destinationPlanet,\n            distance,\n            travelTime: result.travelTime,\n            shipTime: result.shipTime,\n            timeDilation: result.timeDilation,\n            interestRate: result.interestRate,\n            totalCost: result.totalCost,\n            paymentType: form.paymentType,\n            goods: form.goods,\n            quantity: form.quantity\n          })\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send calculation details');\n      }\n\n      toast({\n        title: 'Trade Calculation Complete',\n        description: 'Calculation details have been sent to the chat.',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Failed to send calculation details:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to send calculation details to chat',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"xl\" boxShadow=\"lg\" h=\"100%\" overflowY=\"auto\">\n      <VStack spacing={4} align=\"stretch\">\n        <Box \n          w=\"100%\" \n          h=\"150px\" \n          bg=\"gray.900\" \n          borderRadius=\"xl\" \n          mb={4} \n          position=\"relative\"\n          overflow=\"hidden\"\n        >\n          {/* Stars background effect */}\n          <Box\n            position=\"absolute\"\n            top={0}\n            left={0}\n            right={0}\n            bottom={0}\n            bgImage=\"radial-gradient(white 1px, transparent 1px)\"\n            backgroundSize=\"15px 15px\"\n            opacity={0.2}\n          />\n          \n          {/* Planets display */}\n          <Flex\n            h=\"100%\"\n            justify=\"space-around\"\n            align=\"center\"\n            position=\"relative\"\n            px={8}\n          >\n            {/* Source Planet */}\n            <VStack spacing={2}>\n              <Circle\n                size={`${PLANET_SIZES[form.sourcePlanet]}px`}\n                bg={PLANET_COLORS[form.sourcePlanet]}\n                boxShadow=\"0 0 20px rgba(255,255,255,0.2)\"\n                border=\"2px solid rgba(255,255,255,0.2)\"\n              />\n              <Text color=\"white\" fontSize=\"sm\" fontWeight=\"medium\">\n                {form.sourcePlanet}\n              </Text>\n            </VStack>\n\n            {/* Arrow or connection line */}\n            <Box w=\"100px\" h=\"2px\" bg=\"blue.400\" />\n\n            {/* Destination Planet */}\n            <VStack spacing={2}>\n              <Circle\n                size={`${PLANET_SIZES[form.destinationPlanet]}px`}\n                bg={PLANET_COLORS[form.destinationPlanet]}\n                boxShadow=\"0 0 20px rgba(255,255,255,0.2)\"\n                border=\"2px solid rgba(255,255,255,0.2)\"\n              />\n              <Text color=\"white\" fontSize=\"sm\" fontWeight=\"medium\">\n                {form.destinationPlanet}\n              </Text>\n            </VStack>\n          </Flex>\n        </Box>\n\n        <Heading size=\"lg\" mb={2}>Interstellar Trade</Heading>\n        \n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Source Location</FormLabel>\n            <Select\n              value={form.sourcePlanet}\n              onChange={(e) => {\n                setForm({ ...form, sourcePlanet: e.target.value });\n              }}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n            {form.sourcePlanet && (\n              <Text fontSize=\"sm\" color=\"gray.600\" mt={1}>\n                {CELESTIAL_BODY_INFO[form.sourcePlanet]}\n              </Text>\n            )}\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Destination Location</FormLabel>\n            <Select\n              value={form.destinationPlanet}\n              onChange={(e) => {\n                setForm({ ...form, destinationPlanet: e.target.value });\n              }}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n            {form.destinationPlanet && (\n              <Text fontSize=\"sm\" color=\"gray.600\" mt={1}>\n                {CELESTIAL_BODY_INFO[form.destinationPlanet]}\n              </Text>\n            )}\n          </FormControl>\n        </HStack>\n\n        <FormControl>\n          <FormLabel>Goods</FormLabel>\n          <Input\n            value={form.goods}\n            onChange={(e) => setForm({ ...form, goods: e.target.value })}\n            placeholder=\"Enter goods description\"\n          />\n        </FormControl>\n\n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Quantity</FormLabel>\n            <Input\n              type=\"number\"\n              min=\"1\"\n              value={form.quantity}\n              onChange={(e) => setForm({ ...form, quantity: Math.max(1, Number(e.target.value)) })}\n            />\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Payment Type</FormLabel>\n            <Select\n              value={form.paymentType}\n              onChange={(e) => setForm({ ...form, paymentType: e.target.value as 'upfront' | 'on_delivery' })}\n            >\n              <option value=\"upfront\">Pay Upfront</option>\n              <option value=\"on_delivery\">Pay on Delivery</option>\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <Button\n          colorScheme=\"blue\"\n          size=\"lg\"\n          onClick={handleSubmit}\n          mt={4}\n        >\n          Calculate Trade\n        </Button>\n\n        {calculation && (\n          <Box mt={4} p={4} borderRadius=\"md\" bg=\"gray.50\">\n            <StatGroup>\n              <Stat>\n                <StatLabel>Distance</StatLabel>\n                <StatNumber>{calculation.distance.toFixed(2)} AU</StatNumber>\n                <StatHelpText>Astronomical Units</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Earth Time</StatLabel>\n                <StatNumber>{calculation.travelTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>In stationary frame</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Ship Time</StatLabel>\n                <StatNumber>{calculation.shipTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>Due to time dilation</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Time Dilation</StatLabel>\n                <StatNumber>{calculation.timeDilation.toFixed(4)}x</StatNumber>\n                <StatHelpText>Relativistic factor</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Interest Rate</StatLabel>\n                <StatNumber>{(calculation.interestRate * 100).toFixed(4)}%</StatNumber>\n                <StatHelpText>{form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'}</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Total Cost</StatLabel>\n                <StatNumber>{calculation.totalCost.toFixed(2)} credits</StatNumber>\n                <StatHelpText>Including interest</StatHelpText>\n              </Stat>\n            </StatGroup>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}