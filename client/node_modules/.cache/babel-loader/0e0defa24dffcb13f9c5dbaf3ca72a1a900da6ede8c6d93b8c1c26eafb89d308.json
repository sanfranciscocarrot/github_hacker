{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, VStack, HStack, FormControl, FormLabel, Input, Select, Button, Text, useToast, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatGroup } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,\n  // 4.25 light years\n  'Alpha Centauri A': 271909.7,\n  // 4.3 light years\n  'Alpha Centauri B': 271909.7,\n  // 4.3 light years\n  'Barnard\\'s Star': 379446.6,\n  // 6.0 light years\n  'Wolf 359': 474308.3,\n  // 7.5 light years\n  'Lalande 21185': 515521.8,\n  // 8.15 light years\n  'Sirius A': 537549.4,\n  // 8.5 light years\n  'Sirius B': 537549.4,\n  // 8.5 light years\n\n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1e': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1f': 2529644.0,\n  // 40 light years\n  'Kepler-186f': 3099814.0,\n  // 49 light years\n  'TOI-700d': 6324110.0,\n  // 100 light years\n\n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,\n  // 625 light years\n  'Vega': 158102750.0,\n  // 2500 light years\n  'Antares': 316205500.0,\n  // 5000 light years\n  'Deneb': 474308250.0,\n  // 7500 light years\n\n  // Galactic Features\n  'Orion Nebula': 853754850.0,\n  // 13,500 light years\n  'Galactic Center': 1580275000.0,\n  // 25,000 light years\n  'LMC': 3162055000.0 // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\nexport const TradePanel = () => {\n  _s();\n  const [form, setForm] = useState({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront'\n  });\n  const [calculation, setCalculation] = useState(null);\n  const toast = useToast();\n  const calculateTradeParameters = (distance, paymentType) => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const SECONDS_PER_YEAR = 31557600; // 365.25 * 24 * 60 * 60\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceMeters / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate interest based on proper time and time dilation\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n\n    // Calculate effective interest rate based on payment type\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment, the money could have been invested on Earth\n      // Use Earth time (coordinate time) for interest calculation\n      const earthYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      // The effective time for interest is the Earth time\n      const effectiveYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, effectiveYears) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = form.quantity * 1000; // Base cost per unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n    return {\n      distance,\n      travelTime: earthTimeDays,\n      shipTime: shipTimeDays,\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate,\n      totalCost\n    };\n  };\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"xl\",\n    boxShadow: \"lg\",\n    h: \"100%\",\n    overflowY: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: 2,\n        children: \"Interstellar Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Source Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.sourcePlanet,\n            onChange: e => {\n              setForm({\n                ...form,\n                sourcePlanet: e.target.value\n              });\n            },\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), form.sourcePlanet && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            color: \"gray.600\",\n            mt: 1,\n            children: CELESTIAL_BODY_INFO[form.sourcePlanet]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Destination Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.destinationPlanet,\n            onChange: e => {\n              setForm({\n                ...form,\n                destinationPlanet: e.target.value\n              });\n            },\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), form.destinationPlanet && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            color: \"gray.600\",\n            mt: 1,\n            children: CELESTIAL_BODY_INFO[form.destinationPlanet]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Goods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: form.goods,\n          onChange: e => setForm({\n            ...form,\n            goods: e.target.value\n          }),\n          placeholder: \"Enter goods description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"1\",\n            value: form.quantity,\n            onChange: e => setForm({\n              ...form,\n              quantity: Math.max(1, Number(e.target.value))\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.paymentType,\n            onChange: e => setForm({\n              ...form,\n              paymentType: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"upfront\",\n              children: \"Pay Upfront\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"on_delivery\",\n              children: \"Pay on Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"lg\",\n        onClick: handleSubmit,\n        mt: 4,\n        children: \"Calculate Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), calculation && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        p: 4,\n        borderRadius: \"md\",\n        bg: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(StatGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.distance.toFixed(2), \" AU\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Astronomical Units\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Earth Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.travelTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"In stationary frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Ship Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.shipTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Due to time dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Time Dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.timeDilation.toFixed(4), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Relativistic factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [(calculation.interestRate * 100).toFixed(4), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.totalCost.toFixed(2), \" credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Including interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(TradePanel, \"bBWVuVU5V9KEeSdq7YzTr2Uit/I=\", false, function () {\n  return [useToast];\n});\n_c = TradePanel;\nvar _c;\n$RefreshReg$(_c, \"TradePanel\");","map":{"version":3,"names":["React","useState","Box","VStack","HStack","FormControl","FormLabel","Input","Select","Button","Text","useToast","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatGroup","jsxDEV","_jsxDEV","PLANET_DISTANCES","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","CELESTIAL_BODY_INFO","TradePanel","_s","form","setForm","sourcePlanet","destinationPlanet","goods","quantity","paymentType","calculation","setCalculation","toast","calculateTradeParameters","distance","SPEED_OF_LIGHT","SHIP_SPEED_RATIO","SHIP_SPEED","AU_TO_METERS","SECONDS_PER_DAY","SECONDS_PER_YEAR","distanceMeters","timeDilationFactor","Math","sqrt","pow","earthTimeSeconds","shipTimeSeconds","earthTimeDays","shipTimeDays","BASE_INTEREST_RATE","effectiveInterestRate","earthYears","effectiveYears","baseCost","totalCost","travelTime","shipTime","timeDilation","interestRate","handleSubmit","sourceDistance","destDistance","abs","result","title","description","status","duration","isClosable","p","bg","borderRadius","boxShadow","h","overflowY","children","spacing","align","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","keys","map","planet","fontSize","color","mt","placeholder","type","min","max","Number","colorScheme","onClick","toFixed","_c","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Text,\n  useToast,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatGroup,\n  ScaleFade,\n} from '@chakra-ui/react';\n\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES: Record<string, number> = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  \n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,  // 4.25 light years\n  'Alpha Centauri A': 271909.7,    // 4.3 light years\n  'Alpha Centauri B': 271909.7,    // 4.3 light years\n  'Barnard\\'s Star': 379446.6,     // 6.0 light years\n  'Wolf 359': 474308.3,            // 7.5 light years\n  'Lalande 21185': 515521.8,       // 8.15 light years\n  'Sirius A': 537549.4,            // 8.5 light years\n  'Sirius B': 537549.4,            // 8.5 light years\n  \n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,       // 40 light years\n  'TRAPPIST-1e': 2529644.0,       // 40 light years\n  'TRAPPIST-1f': 2529644.0,       // 40 light years\n  'Kepler-186f': 3099814.0,       // 49 light years\n  'TOI-700d': 6324110.0,          // 100 light years\n  \n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,       // 625 light years\n  'Vega': 158102750.0,            // 2500 light years\n  'Antares': 316205500.0,         // 5000 light years\n  'Deneb': 474308250.0,           // 7500 light years\n  \n  // Galactic Features\n  'Orion Nebula': 853754850.0,    // 13,500 light years\n  'Galactic Center': 1580275000.0, // 25,000 light years\n  'LMC': 3162055000.0,            // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO: Record<string, string> = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\nexport const TradePanel: React.FC = () => {\n  const [form, setForm] = useState<TradeForm>({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront',\n  });\n\n  const [calculation, setCalculation] = useState<{\n    distance: number;\n    travelTime: number;\n    shipTime: number;\n    interestRate: number;\n    totalCost: number;\n    timeDilation: number;\n  } | null>(null);\n\n  const toast = useToast();\n\n  const calculateTradeParameters = (distance: number, paymentType: 'upfront' | 'on_delivery') => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const SECONDS_PER_YEAR = 31557600; // 365.25 * 24 * 60 * 60\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceMeters / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate interest based on proper time and time dilation\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n    \n    // Calculate effective interest rate based on payment type\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment, the money could have been invested on Earth\n      // Use Earth time (coordinate time) for interest calculation\n      const earthYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      // The effective time for interest is the Earth time\n      const effectiveYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, effectiveYears) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = form.quantity * 1000; // Base cost per unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n\n    return {\n      distance,\n      travelTime: earthTimeDays,\n      shipTime: shipTimeDays,\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate,\n      totalCost,\n    };\n  };\n\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    \n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n    \n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"xl\" boxShadow=\"lg\" h=\"100%\" overflowY=\"auto\">\n      <VStack spacing={4} align=\"stretch\">\n        <Heading size=\"lg\" mb={2}>Interstellar Trade</Heading>\n        \n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Source Location</FormLabel>\n            <Select\n              value={form.sourcePlanet}\n              onChange={(e) => {\n                setForm({ ...form, sourcePlanet: e.target.value });\n              }}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n            {form.sourcePlanet && (\n              <Text fontSize=\"sm\" color=\"gray.600\" mt={1}>\n                {CELESTIAL_BODY_INFO[form.sourcePlanet]}\n              </Text>\n            )}\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Destination Location</FormLabel>\n            <Select\n              value={form.destinationPlanet}\n              onChange={(e) => {\n                setForm({ ...form, destinationPlanet: e.target.value });\n              }}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n            {form.destinationPlanet && (\n              <Text fontSize=\"sm\" color=\"gray.600\" mt={1}>\n                {CELESTIAL_BODY_INFO[form.destinationPlanet]}\n              </Text>\n            )}\n          </FormControl>\n        </HStack>\n\n        <FormControl>\n          <FormLabel>Goods</FormLabel>\n          <Input\n            value={form.goods}\n            onChange={(e) => setForm({ ...form, goods: e.target.value })}\n            placeholder=\"Enter goods description\"\n          />\n        </FormControl>\n\n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Quantity</FormLabel>\n            <Input\n              type=\"number\"\n              min=\"1\"\n              value={form.quantity}\n              onChange={(e) => setForm({ ...form, quantity: Math.max(1, Number(e.target.value)) })}\n            />\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Payment Type</FormLabel>\n            <Select\n              value={form.paymentType}\n              onChange={(e) => setForm({ ...form, paymentType: e.target.value as 'upfront' | 'on_delivery' })}\n            >\n              <option value=\"upfront\">Pay Upfront</option>\n              <option value=\"on_delivery\">Pay on Delivery</option>\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <Button\n          colorScheme=\"blue\"\n          size=\"lg\"\n          onClick={handleSubmit}\n          mt={4}\n        >\n          Calculate Trade\n        </Button>\n\n        {calculation && (\n          <Box mt={4} p={4} borderRadius=\"md\" bg=\"gray.50\">\n            <StatGroup>\n              <Stat>\n                <StatLabel>Distance</StatLabel>\n                <StatNumber>{calculation.distance.toFixed(2)} AU</StatNumber>\n                <StatHelpText>Astronomical Units</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Earth Time</StatLabel>\n                <StatNumber>{calculation.travelTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>In stationary frame</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Ship Time</StatLabel>\n                <StatNumber>{calculation.shipTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>Due to time dilation</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Time Dilation</StatLabel>\n                <StatNumber>{calculation.timeDilation.toFixed(4)}x</StatNumber>\n                <StatHelpText>Relativistic factor</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Interest Rate</StatLabel>\n                <StatNumber>{(calculation.interestRate * 100).toFixed(4)}%</StatNumber>\n                <StatHelpText>{form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'}</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Total Cost</StatLabel>\n                <StatNumber>{calculation.totalCost.toFixed(2)} credits</StatNumber>\n                <StatHelpText>Including interest</StatHelpText>\n              </Stat>\n            </StatGroup>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}