{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/InterstellarMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box } from '@chakra-ui/react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst planets = [{\n  name: 'Earth',\n  position: [0, 0, 0],\n  radius: 1,\n  color: '#1a75ff'\n}, {\n  name: 'Mars',\n  position: [1.5, 0, 0],\n  radius: 0.5,\n  color: '#ff4d4d'\n}, {\n  name: 'Jupiter',\n  position: [5, 0, 0],\n  radius: 2,\n  color: '#ffcc00'\n}];\nexport const InterstellarMap = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Camera position\n    camera.position.z = 10;\n\n    // Add planets\n    planets.forEach(planet => {\n      const geometry = new THREE.SphereGeometry(planet.radius, 32, 32);\n      const material = new THREE.MeshBasicMaterial({\n        color: planet.color\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      sphere.position.set(...planet.position);\n      scene.add(sphere);\n    });\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      if (!mountRef.current) return;\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      var _mountRef$current;\n      window.removeEventListener('resize', handleResize);\n      (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: mountRef,\n    w: \"100%\",\n    h: \"100%\",\n    bg: \"gray.900\",\n    borderRadius: \"lg\",\n    overflow: \"hidden\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(InterstellarMap, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = InterstellarMap;\nvar _c;\n$RefreshReg$(_c, \"InterstellarMap\");","map":{"version":3,"names":["React","useEffect","useRef","Box","THREE","jsxDEV","_jsxDEV","planets","name","position","radius","color","InterstellarMap","_s","mountRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","clientWidth","clientHeight","appendChild","domElement","z","forEach","planet","geometry","SphereGeometry","material","MeshBasicMaterial","sphere","Mesh","set","add","animate","requestAnimationFrame","render","handleResize","width","height","aspect","updateProjectionMatrix","addEventListener","_mountRef$current","removeEventListener","removeChild","ref","w","h","bg","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/InterstellarMap.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box } from '@chakra-ui/react';\nimport * as THREE from 'three';\n\ninterface Planet {\n  name: string;\n  position: [number, number, number];\n  radius: number;\n  color: string;\n}\n\nconst planets: Planet[] = [\n  { name: 'Earth', position: [0, 0, 0], radius: 1, color: '#1a75ff' },\n  { name: 'Mars', position: [1.5, 0, 0], radius: 0.5, color: '#ff4d4d' },\n  { name: 'Jupiter', position: [5, 0, 0], radius: 2, color: '#ffcc00' },\n];\n\nexport const InterstellarMap: React.FC = () => {\n  const mountRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    \n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Camera position\n    camera.position.z = 10;\n\n    // Add planets\n    planets.forEach(planet => {\n      const geometry = new THREE.SphereGeometry(planet.radius, 32, 32);\n      const material = new THREE.MeshBasicMaterial({ color: planet.color });\n      const sphere = new THREE.Mesh(geometry, material);\n      sphere.position.set(...planet.position);\n      scene.add(sphere);\n    });\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      if (!mountRef.current) return;\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current?.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return (\n    <Box\n      ref={mountRef}\n      w=\"100%\"\n      h=\"100%\"\n      bg=\"gray.900\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n    />\n  );\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS/B,MAAMC,OAAiB,GAAG,CACxB;EAAEC,IAAI,EAAE,OAAO;EAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAU,CAAC,EACnE;EAAEH,IAAI,EAAE,MAAM;EAAEC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE,GAAG;EAAEC,KAAK,EAAE;AAAU,CAAC,EACtE;EAAEH,IAAI,EAAE,SAAS;EAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAU,CAAC,CACtE;AAED,OAAO,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7C,MAAMC,QAAQ,GAAGZ,MAAM,CAAiB,IAAI,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,QAAQ,CAACC,OAAO,EAAE;;IAEvB;IACA,MAAMC,KAAK,GAAG,IAAIZ,KAAK,CAACa,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAId,KAAK,CAACe,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAE7DF,QAAQ,CAACG,OAAO,CAACZ,QAAQ,CAACC,OAAO,CAACY,WAAW,EAAEb,QAAQ,CAACC,OAAO,CAACa,YAAY,CAAC;IAC7Ed,QAAQ,CAACC,OAAO,CAACc,WAAW,CAACN,QAAQ,CAACO,UAAU,CAAC;;IAEjD;IACAZ,MAAM,CAACT,QAAQ,CAACsB,CAAC,GAAG,EAAE;;IAEtB;IACAxB,OAAO,CAACyB,OAAO,CAACC,MAAM,IAAI;MACxB,MAAMC,QAAQ,GAAG,IAAI9B,KAAK,CAAC+B,cAAc,CAACF,MAAM,CAACvB,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;MAChE,MAAM0B,QAAQ,GAAG,IAAIhC,KAAK,CAACiC,iBAAiB,CAAC;QAAE1B,KAAK,EAAEsB,MAAM,CAACtB;MAAM,CAAC,CAAC;MACrE,MAAM2B,MAAM,GAAG,IAAIlC,KAAK,CAACmC,IAAI,CAACL,QAAQ,EAAEE,QAAQ,CAAC;MACjDE,MAAM,CAAC7B,QAAQ,CAAC+B,GAAG,CAAC,GAAGP,MAAM,CAACxB,QAAQ,CAAC;MACvCO,KAAK,CAACyB,GAAG,CAACH,MAAM,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,MAAMI,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BnB,QAAQ,CAACqB,MAAM,CAAC5B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IACDwB,OAAO,CAAC,CAAC;;IAET;IACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI,CAAC/B,QAAQ,CAACC,OAAO,EAAE;MACvB,MAAM+B,KAAK,GAAGhC,QAAQ,CAACC,OAAO,CAACY,WAAW;MAC1C,MAAMoB,MAAM,GAAGjC,QAAQ,CAACC,OAAO,CAACa,YAAY;MAC5CV,MAAM,CAAC8B,MAAM,GAAGF,KAAK,GAAGC,MAAM;MAC9B7B,MAAM,CAAC+B,sBAAsB,CAAC,CAAC;MAC/B1B,QAAQ,CAACG,OAAO,CAACoB,KAAK,EAAEC,MAAM,CAAC;IACjC,CAAC;IAED3B,MAAM,CAAC8B,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MAAA,IAAAM,iBAAA;MACX/B,MAAM,CAACgC,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;MAClD,CAAAM,iBAAA,GAAArC,QAAQ,CAACC,OAAO,cAAAoC,iBAAA,uBAAhBA,iBAAA,CAAkBE,WAAW,CAAC9B,QAAQ,CAACO,UAAU,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA,CAACH,GAAG;IACFmD,GAAG,EAAExC,QAAS;IACdyC,CAAC,EAAC,MAAM;IACRC,CAAC,EAAC,MAAM;IACRC,EAAE,EAAC,UAAU;IACbC,YAAY,EAAC,IAAI;IACjBC,QAAQ,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEN,CAAC;AAAClD,EAAA,CA9DWD,eAAyB;AAAAoD,EAAA,GAAzBpD,eAAyB;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}