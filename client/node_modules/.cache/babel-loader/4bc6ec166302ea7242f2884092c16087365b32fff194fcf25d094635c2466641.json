{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, VStack, HStack, FormControl, FormLabel, Input, Select, Button, useToast, Heading, Stat, StatLabel, StatNumber, StatGroup } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Planet data in AU (Astronomical Units)\nconst PLANET_DISTANCES = {\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069\n};\nexport const TradePanel = () => {\n  _s();\n  const [form, setForm] = useState({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront'\n  });\n  const [calculation, setCalculation] = useState(null);\n  const toast = useToast();\n  const calculateInterest = (distance, paymentType) => {\n    const speedOfLight = 299792458; // m/s\n    const shipSpeed = 0.9 * speedOfLight; // 90% of light speed\n\n    // Convert distance from AU to meters\n    const distanceMeters = distance * 149597870700; // 1 AU = 149,597,870,700 meters\n\n    // Calculate travel time in seconds\n    const travelTime = distanceMeters / shipSpeed;\n\n    // Calculate time dilation factor\n    const timeDilationFactor = 1 / Math.sqrt(1 - (shipSpeed / speedOfLight) ** 2);\n\n    // Convert travel time to years\n    const travelTimeYears = travelTime / (365.25 * 24 * 60 * 60);\n\n    // Base interest rate (5% per year)\n    const baseInterestRate = 0.05;\n    if (paymentType === 'upfront') {\n      return baseInterestRate * timeDilationFactor * travelTimeYears;\n    } else {\n      return baseInterestRate * timeDilationFactor * travelTimeYears * 2;\n    }\n  };\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    const interestRate = calculateInterest(distance, form.paymentType);\n    const baseCost = form.quantity * 100; // Base cost per unit\n    const totalCost = baseCost * (1 + interestRate);\n\n    // Calculate travel time in Earth days\n    const speedOfLight = 299792458; // m/s\n    const shipSpeed = 0.9 * speedOfLight;\n    const distanceMeters = distance * 149597870700;\n    const travelTimeSeconds = distanceMeters / shipSpeed;\n    const travelTimeDays = travelTimeSeconds / (24 * 60 * 60);\n    setCalculation({\n      distance,\n      travelTime: travelTimeDays,\n      interestRate,\n      totalCost\n    });\n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 3000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"xl\",\n    boxShadow: \"lg\",\n    h: \"100%\",\n    overflowY: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: 2,\n        children: \"Interstellar Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Source Planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.sourcePlanet,\n            onChange: e => setForm({\n              ...form,\n              sourcePlanet: e.target.value\n            }),\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Destination Planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.destinationPlanet,\n            onChange: e => setForm({\n              ...form,\n              destinationPlanet: e.target.value\n            }),\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Goods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: form.goods,\n          onChange: e => setForm({\n            ...form,\n            goods: e.target.value\n          }),\n          placeholder: \"Enter goods description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: form.quantity,\n            onChange: e => setForm({\n              ...form,\n              quantity: Number(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.paymentType,\n            onChange: e => setForm({\n              ...form,\n              paymentType: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"upfront\",\n              children: \"Pay Upfront\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"on_delivery\",\n              children: \"Pay on Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"lg\",\n        onClick: handleSubmit,\n        mt: 4,\n        children: \"Calculate Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), calculation && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        p: 4,\n        borderRadius: \"md\",\n        bg: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(StatGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.distance.toFixed(2), \" AU\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Travel Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.travelTime.toFixed(1), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [(calculation.interestRate * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.totalCost.toFixed(2), \" credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(TradePanel, \"bBWVuVU5V9KEeSdq7YzTr2Uit/I=\", false, function () {\n  return [useToast];\n});\n_c = TradePanel;\nvar _c;\n$RefreshReg$(_c, \"TradePanel\");","map":{"version":3,"names":["React","useState","Box","VStack","HStack","FormControl","FormLabel","Input","Select","Button","useToast","Heading","Stat","StatLabel","StatNumber","StatGroup","jsxDEV","_jsxDEV","PLANET_DISTANCES","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","TradePanel","_s","form","setForm","sourcePlanet","destinationPlanet","goods","quantity","paymentType","calculation","setCalculation","toast","calculateInterest","distance","speedOfLight","shipSpeed","distanceMeters","travelTime","timeDilationFactor","Math","sqrt","travelTimeYears","baseInterestRate","handleSubmit","sourceDistance","destDistance","abs","interestRate","baseCost","totalCost","travelTimeSeconds","travelTimeDays","title","description","status","duration","isClosable","p","bg","borderRadius","boxShadow","h","overflowY","children","spacing","align","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","keys","map","planet","placeholder","type","Number","colorScheme","onClick","mt","toFixed","_c","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Text,\n  useToast,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatGroup,\n} from '@chakra-ui/react';\n\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Planet data in AU (Astronomical Units)\nconst PLANET_DISTANCES: Record<string, number> = {\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n};\n\nexport const TradePanel: React.FC = () => {\n  const [form, setForm] = useState<TradeForm>({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront',\n  });\n  const [calculation, setCalculation] = useState<{\n    distance: number;\n    travelTime: number;\n    interestRate: number;\n    totalCost: number;\n  } | null>(null);\n\n  const toast = useToast();\n\n  const calculateInterest = (distance: number, paymentType: 'upfront' | 'on_delivery'): number => {\n    const speedOfLight = 299792458; // m/s\n    const shipSpeed = 0.9 * speedOfLight; // 90% of light speed\n    \n    // Convert distance from AU to meters\n    const distanceMeters = distance * 149597870700; // 1 AU = 149,597,870,700 meters\n    \n    // Calculate travel time in seconds\n    const travelTime = distanceMeters / shipSpeed;\n    \n    // Calculate time dilation factor\n    const timeDilationFactor = 1 / Math.sqrt(1 - (shipSpeed / speedOfLight) ** 2);\n    \n    // Convert travel time to years\n    const travelTimeYears = travelTime / (365.25 * 24 * 60 * 60);\n    \n    // Base interest rate (5% per year)\n    const baseInterestRate = 0.05;\n    \n    if (paymentType === 'upfront') {\n      return baseInterestRate * timeDilationFactor * travelTimeYears;\n    } else {\n      return baseInterestRate * timeDilationFactor * travelTimeYears * 2;\n    }\n  };\n\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    \n    const interestRate = calculateInterest(distance, form.paymentType);\n    const baseCost = form.quantity * 100; // Base cost per unit\n    const totalCost = baseCost * (1 + interestRate);\n    \n    // Calculate travel time in Earth days\n    const speedOfLight = 299792458; // m/s\n    const shipSpeed = 0.9 * speedOfLight;\n    const distanceMeters = distance * 149597870700;\n    const travelTimeSeconds = distanceMeters / shipSpeed;\n    const travelTimeDays = travelTimeSeconds / (24 * 60 * 60);\n\n    setCalculation({\n      distance,\n      travelTime: travelTimeDays,\n      interestRate,\n      totalCost,\n    });\n    \n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"xl\" boxShadow=\"lg\" h=\"100%\" overflowY=\"auto\">\n      <VStack spacing={4} align=\"stretch\">\n        <Heading size=\"lg\" mb={2}>Interstellar Trade</Heading>\n        \n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Source Planet</FormLabel>\n            <Select\n              value={form.sourcePlanet}\n              onChange={(e) => setForm({ ...form, sourcePlanet: e.target.value })}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Destination Planet</FormLabel>\n            <Select\n              value={form.destinationPlanet}\n              onChange={(e) => setForm({ ...form, destinationPlanet: e.target.value })}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <FormControl>\n          <FormLabel>Goods</FormLabel>\n          <Input\n            value={form.goods}\n            onChange={(e) => setForm({ ...form, goods: e.target.value })}\n            placeholder=\"Enter goods description\"\n          />\n        </FormControl>\n\n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Quantity</FormLabel>\n            <Input\n              type=\"number\"\n              value={form.quantity}\n              onChange={(e) => setForm({ ...form, quantity: Number(e.target.value) })}\n            />\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Payment Type</FormLabel>\n            <Select\n              value={form.paymentType}\n              onChange={(e) => setForm({ ...form, paymentType: e.target.value as 'upfront' | 'on_delivery' })}\n            >\n              <option value=\"upfront\">Pay Upfront</option>\n              <option value=\"on_delivery\">Pay on Delivery</option>\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <Button\n          colorScheme=\"blue\"\n          size=\"lg\"\n          onClick={handleSubmit}\n          mt={4}\n        >\n          Calculate Trade\n        </Button>\n\n        {calculation && (\n          <Box mt={4} p={4} borderRadius=\"md\" bg=\"gray.50\">\n            <StatGroup>\n              <Stat>\n                <StatLabel>Distance</StatLabel>\n                <StatNumber>{calculation.distance.toFixed(2)} AU</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Travel Time</StatLabel>\n                <StatNumber>{calculation.travelTime.toFixed(1)} days</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Interest Rate</StatLabel>\n                <StatNumber>{(calculation.interestRate * 100).toFixed(2)}%</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Total Cost</StatLabel>\n                <StatNumber>{calculation.totalCost.toFixed(2)} credits</StatNumber>\n              </Stat>\n            </StatGroup>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}