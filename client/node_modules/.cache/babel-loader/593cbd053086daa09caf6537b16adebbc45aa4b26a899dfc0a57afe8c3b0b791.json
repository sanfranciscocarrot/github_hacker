{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { Box, VStack, HStack, FormControl, FormLabel, Input, Select, Button, Text, useToast, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatGroup, Circle, Flex, keyframes } from '@chakra-ui/react';\nimport { Global, css } from '@emotion/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,\n  // 4.25 light years\n  'Alpha Centauri A': 271909.7,\n  // 4.3 light years\n  'Alpha Centauri B': 271909.7,\n  // 4.3 light years\n  'Barnard\\'s Star': 379446.6,\n  // 6.0 light years\n  'Wolf 359': 474308.3,\n  // 7.5 light years\n  'Lalande 21185': 515521.8,\n  // 8.15 light years\n  'Sirius A': 537549.4,\n  // 8.5 light years\n  'Sirius B': 537549.4,\n  // 8.5 light years\n\n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1e': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1f': 2529644.0,\n  // 40 light years\n  'Kepler-186f': 3099814.0,\n  // 49 light years\n  'TOI-700d': 6324110.0,\n  // 100 light years\n\n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,\n  // 625 light years\n  'Vega': 158102750.0,\n  // 2500 light years\n  'Antares': 316205500.0,\n  // 5000 light years\n  'Deneb': 474308250.0,\n  // 7500 light years\n\n  // Galactic Features\n  'Orion Nebula': 853754850.0,\n  // 13,500 light years\n  'Galactic Center': 1580275000.0,\n  // 25,000 light years\n  'LMC': 3162055000.0 // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\n// Add planet colors mapping\nconst PLANET_COLORS = {\n  Mercury: 'gray.400',\n  Venus: 'yellow.200',\n  Earth: 'blue.400',\n  Mars: 'red.500',\n  Jupiter: 'orange.300',\n  Saturn: 'yellow.500',\n  Uranus: 'teal.300',\n  Neptune: 'blue.500',\n  'Proxima Centauri b': 'red.300',\n  'Alpha Centauri A': 'yellow.400',\n  'Alpha Centauri B': 'orange.400',\n  'Barnard\\'s Star': 'red.600',\n  'Wolf 359': 'red.400',\n  'Lalande 21185': 'orange.500',\n  'Sirius A': 'white',\n  'Sirius B': 'gray.100',\n  'TRAPPIST-1d': 'purple.300',\n  'TRAPPIST-1e': 'purple.400',\n  'TRAPPIST-1f': 'purple.500',\n  'Kepler-186f': 'green.400',\n  'TOI-700d': 'cyan.400',\n  'Betelgeuse': 'red.700',\n  'Vega': 'blue.200',\n  'Antares': 'red.800',\n  'Deneb': 'white',\n  'Orion Nebula': 'purple.200',\n  'Galactic Center': 'black',\n  'LMC': 'blue.100'\n};\n\n// Add planet sizes mapping (relative sizes for visualization)\nconst PLANET_SIZES = {\n  Mercury: 16,\n  Venus: 20,\n  Earth: 20,\n  Mars: 18,\n  Jupiter: 40,\n  Saturn: 35,\n  Uranus: 25,\n  Neptune: 25,\n  'Proxima Centauri b': 22,\n  'Alpha Centauri A': 30,\n  'Alpha Centauri B': 28,\n  'Barnard\\'s Star': 25,\n  'Wolf 359': 20,\n  'Lalande 21185': 22,\n  'Sirius A': 35,\n  'Sirius B': 15,\n  'TRAPPIST-1d': 20,\n  'TRAPPIST-1e': 20,\n  'TRAPPIST-1f': 20,\n  'Kepler-186f': 22,\n  'TOI-700d': 22,\n  'Betelgeuse': 45,\n  'Vega': 30,\n  'Antares': 45,\n  'Deneb': 40,\n  'Orion Nebula': 50,\n  'Galactic Center': 55,\n  'LMC': 60\n};\n\n// Add Google Fonts import\nconst GameFont = () => /*#__PURE__*/_jsxDEV(Global, {\n  styles: `\n      @import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n    `\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 183,\n  columnNumber: 3\n}, this);\n\n// Add this after the GameFont component\n_c = GameFont;\nconst flowAnimation = keyframes`\n  0% {\n    stroke-dashoffset: 20;\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n`;\nexport const TradePanel = () => {\n  _s();\n  const [form, setForm] = useState({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 1,\n    paymentType: 'upfront'\n  });\n  const [calculation, setCalculation] = useState(null);\n  const toast = useToast();\n  const calculateTradeParameters = (distance, paymentType) => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792.458; // km/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO; // km/s\n    const AU_TO_KM = 149597870.7; // 1 AU in km\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const DAYS_PER_YEAR = 365.25;\n\n    // Convert distance from AU to km\n    const distanceKm = distance * AU_TO_KM;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceKm / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate years for interest rates\n    const earthYears = earthTimeDays / DAYS_PER_YEAR;\n    const shipYears = shipTimeDays / DAYS_PER_YEAR;\n\n    // Calculate interest rates based on payment type\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears * timeDilationFactor) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = Math.max(1, form.quantity) * 1000; // Base cost per unit, minimum 1 unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n    return {\n      distance: parseFloat(distance.toFixed(2)),\n      travelTime: parseFloat(earthTimeDays.toFixed(2)),\n      shipTime: parseFloat(shipTimeDays.toFixed(2)),\n      timeDilation: parseFloat(timeDilationFactor.toFixed(4)),\n      interestRate: effectiveInterestRate,\n      totalCost: parseFloat(totalCost.toFixed(2))\n    };\n  };\n  const handleSubmit = async () => {\n    if (form.quantity <= 0) {\n      toast({\n        title: 'Invalid Quantity',\n        description: 'Please enter a quantity greater than 0',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n      return;\n    }\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n\n    // Send calculation details to the chat interface\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: '!explain_calculation:' + JSON.stringify({\n            sourcePlanet: form.sourcePlanet,\n            destinationPlanet: form.destinationPlanet,\n            distance,\n            travelTime: result.travelTime,\n            shipTime: result.shipTime,\n            timeDilation: result.timeDilation,\n            interestRate: result.interestRate,\n            totalCost: result.totalCost,\n            paymentType: form.paymentType,\n            goods: form.goods,\n            quantity: form.quantity\n          })\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send calculation details');\n      }\n      toast({\n        title: 'Trade Calculation Complete',\n        description: 'Calculation details have been sent to the chat.',\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Failed to send calculation details:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to send calculation details to chat',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Add this before the return statement\n  const distance = useMemo(() => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    return Math.abs(destDistance - sourceDistance);\n  }, [form.sourcePlanet, form.destinationPlanet]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"xl\",\n    boxShadow: \"lg\",\n    h: \"100%\",\n    overflowY: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(GameFont, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Global, {\n      styles: css`\n          @keyframes flow {\n            0% {\n              stroke-dashoffset: 20;\n            }\n            100% {\n              stroke-dashoffset: 0;\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        h: \"150px\",\n        bg: \"gray.900\",\n        borderRadius: \"xl\",\n        mb: 4,\n        position: \"relative\",\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          bgImage: \"radial-gradient(white 1px, transparent 1px)\",\n          backgroundSize: \"15px 15px\",\n          opacity: 0.2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          h: \"100%\",\n          justify: \"space-around\",\n          align: \"center\",\n          position: \"relative\",\n          px: 8,\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              size: `${PLANET_SIZES[form.sourcePlanet]}px`,\n              bg: PLANET_COLORS[form.sourcePlanet],\n              boxShadow: \"0 0 20px rgba(255,255,255,0.2)\",\n              border: \"2px solid rgba(255,255,255,0.2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"white\",\n              fontSize: \"xs\",\n              fontWeight: \"medium\",\n              sx: {\n                fontFamily: \"'Press Start 2P', cursive\",\n                textShadow: \"0 0 5px rgba(0,255,255,0.5)\",\n                letterSpacing: \"-0.05em\"\n              },\n              children: form.sourcePlanet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"200\",\n              height: \"2\",\n              style: {\n                overflow: 'visible'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"0\",\n                y1: \"0\",\n                x2: \"200\",\n                y2: \"0\",\n                stroke: \"cyan\",\n                strokeWidth: \"2\",\n                strokeDasharray: \"4\",\n                style: {\n                  animation: 'flow 1s linear infinite',\n                  filter: 'drop-shadow(0 0 8px cyan)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"cyan.200\",\n              fontSize: \"xs\",\n              mt: -2,\n              sx: {\n                fontFamily: \"'Press Start 2P', cursive\",\n                textShadow: \"0 0 5px rgba(0,255,255,0.5)\"\n              },\n              children: distance < 1000 ? `${distance.toFixed(2)} AU` : `${(distance / 63241.1).toFixed(2)} LY`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Circle, {\n              size: `${PLANET_SIZES[form.destinationPlanet]}px`,\n              bg: PLANET_COLORS[form.destinationPlanet],\n              boxShadow: \"0 0 20px rgba(255,255,255,0.2)\",\n              border: \"2px solid rgba(255,255,255,0.2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"white\",\n              fontSize: \"xs\",\n              fontWeight: \"medium\",\n              sx: {\n                fontFamily: \"'Press Start 2P', cursive\",\n                textShadow: \"0 0 5px rgba(0,255,255,0.5)\",\n                letterSpacing: \"-0.05em\"\n              },\n              children: form.destinationPlanet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: 2,\n        children: \"Interstellar Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Source Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.sourcePlanet,\n            onChange: e => {\n              setForm({\n                ...form,\n                sourcePlanet: e.target.value\n              });\n            },\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), form.sourcePlanet && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            color: \"gray.600\",\n            mt: 1,\n            children: CELESTIAL_BODY_INFO[form.sourcePlanet]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Destination Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.destinationPlanet,\n            onChange: e => {\n              setForm({\n                ...form,\n                destinationPlanet: e.target.value\n              });\n            },\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), form.destinationPlanet && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"sm\",\n            color: \"gray.600\",\n            mt: 1,\n            children: CELESTIAL_BODY_INFO[form.destinationPlanet]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Goods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: form.goods,\n          onChange: e => setForm({\n            ...form,\n            goods: e.target.value\n          }),\n          placeholder: \"Enter goods description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"1\",\n            value: form.quantity,\n            onChange: e => setForm({\n              ...form,\n              quantity: Math.max(1, Number(e.target.value))\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.paymentType,\n            onChange: e => setForm({\n              ...form,\n              paymentType: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"upfront\",\n              children: \"Pay Upfront\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"on_delivery\",\n              children: \"Pay on Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"lg\",\n        onClick: handleSubmit,\n        mt: 4,\n        children: \"Calculate Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this), calculation && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        p: 4,\n        borderRadius: \"md\",\n        bg: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(StatGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.distance.toFixed(2), \" AU\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Astronomical Units\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Earth Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.travelTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"In stationary frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Ship Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.shipTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Due to time dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Time Dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.timeDilation.toFixed(4), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Relativistic factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [(calculation.interestRate * 100).toFixed(4), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.totalCost.toFixed(2), \" credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Including interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s(TradePanel, \"+bXQNHm3xX0dBQJHQ74rHqE8mI8=\", false, function () {\n  return [useToast];\n});\n_c2 = TradePanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"GameFont\");\n$RefreshReg$(_c2, \"TradePanel\");","map":{"version":3,"names":["React","useState","useMemo","Box","VStack","HStack","FormControl","FormLabel","Input","Select","Button","Text","useToast","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatGroup","Circle","Flex","keyframes","Global","css","jsxDEV","_jsxDEV","PLANET_DISTANCES","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","CELESTIAL_BODY_INFO","PLANET_COLORS","PLANET_SIZES","GameFont","styles","fileName","_jsxFileName","lineNumber","columnNumber","_c","flowAnimation","TradePanel","_s","form","setForm","sourcePlanet","destinationPlanet","goods","quantity","paymentType","calculation","setCalculation","toast","calculateTradeParameters","distance","SPEED_OF_LIGHT","SHIP_SPEED_RATIO","SHIP_SPEED","AU_TO_KM","SECONDS_PER_DAY","DAYS_PER_YEAR","distanceKm","timeDilationFactor","Math","sqrt","pow","earthTimeSeconds","shipTimeSeconds","earthTimeDays","shipTimeDays","earthYears","shipYears","BASE_INTEREST_RATE","effectiveInterestRate","baseCost","max","totalCost","parseFloat","toFixed","travelTime","shipTime","timeDilation","interestRate","handleSubmit","title","description","status","duration","isClosable","sourceDistance","destDistance","abs","result","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","error","console","p","bg","borderRadius","boxShadow","h","overflowY","children","spacing","align","w","mb","position","overflow","top","left","right","bottom","bgImage","backgroundSize","opacity","justify","px","size","border","color","fontSize","fontWeight","sx","fontFamily","textShadow","letterSpacing","width","height","style","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","animation","filter","mt","value","onChange","e","target","Object","keys","map","planet","placeholder","type","min","Number","colorScheme","onClick","_c2","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Text,\n  useToast,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatGroup,\n  ScaleFade,\n  Circle,\n  Flex,\n  keyframes,\n} from '@chakra-ui/react';\nimport { Global, css } from '@emotion/react';\n\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES: Record<string, number> = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  \n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,  // 4.25 light years\n  'Alpha Centauri A': 271909.7,    // 4.3 light years\n  'Alpha Centauri B': 271909.7,    // 4.3 light years\n  'Barnard\\'s Star': 379446.6,     // 6.0 light years\n  'Wolf 359': 474308.3,            // 7.5 light years\n  'Lalande 21185': 515521.8,       // 8.15 light years\n  'Sirius A': 537549.4,            // 8.5 light years\n  'Sirius B': 537549.4,            // 8.5 light years\n  \n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,       // 40 light years\n  'TRAPPIST-1e': 2529644.0,       // 40 light years\n  'TRAPPIST-1f': 2529644.0,       // 40 light years\n  'Kepler-186f': 3099814.0,       // 49 light years\n  'TOI-700d': 6324110.0,          // 100 light years\n  \n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,       // 625 light years\n  'Vega': 158102750.0,            // 2500 light years\n  'Antares': 316205500.0,         // 5000 light years\n  'Deneb': 474308250.0,           // 7500 light years\n  \n  // Galactic Features\n  'Orion Nebula': 853754850.0,    // 13,500 light years\n  'Galactic Center': 1580275000.0, // 25,000 light years\n  'LMC': 3162055000.0,            // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO: Record<string, string> = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\n// Add planet colors mapping\nconst PLANET_COLORS: Record<string, string> = {\n  Mercury: 'gray.400',\n  Venus: 'yellow.200',\n  Earth: 'blue.400',\n  Mars: 'red.500',\n  Jupiter: 'orange.300',\n  Saturn: 'yellow.500',\n  Uranus: 'teal.300',\n  Neptune: 'blue.500',\n  'Proxima Centauri b': 'red.300',\n  'Alpha Centauri A': 'yellow.400',\n  'Alpha Centauri B': 'orange.400',\n  'Barnard\\'s Star': 'red.600',\n  'Wolf 359': 'red.400',\n  'Lalande 21185': 'orange.500',\n  'Sirius A': 'white',\n  'Sirius B': 'gray.100',\n  'TRAPPIST-1d': 'purple.300',\n  'TRAPPIST-1e': 'purple.400',\n  'TRAPPIST-1f': 'purple.500',\n  'Kepler-186f': 'green.400',\n  'TOI-700d': 'cyan.400',\n  'Betelgeuse': 'red.700',\n  'Vega': 'blue.200',\n  'Antares': 'red.800',\n  'Deneb': 'white',\n  'Orion Nebula': 'purple.200',\n  'Galactic Center': 'black',\n  'LMC': 'blue.100',\n};\n\n// Add planet sizes mapping (relative sizes for visualization)\nconst PLANET_SIZES: Record<string, number> = {\n  Mercury: 16,\n  Venus: 20,\n  Earth: 20,\n  Mars: 18,\n  Jupiter: 40,\n  Saturn: 35,\n  Uranus: 25,\n  Neptune: 25,\n  'Proxima Centauri b': 22,\n  'Alpha Centauri A': 30,\n  'Alpha Centauri B': 28,\n  'Barnard\\'s Star': 25,\n  'Wolf 359': 20,\n  'Lalande 21185': 22,\n  'Sirius A': 35,\n  'Sirius B': 15,\n  'TRAPPIST-1d': 20,\n  'TRAPPIST-1e': 20,\n  'TRAPPIST-1f': 20,\n  'Kepler-186f': 22,\n  'TOI-700d': 22,\n  'Betelgeuse': 45,\n  'Vega': 30,\n  'Antares': 45,\n  'Deneb': 40,\n  'Orion Nebula': 50,\n  'Galactic Center': 55,\n  'LMC': 60,\n};\n\n// Add Google Fonts import\nconst GameFont = () => (\n  <Global\n    styles={`\n      @import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n    `}\n  />\n);\n\n// Add this after the GameFont component\nconst flowAnimation = keyframes`\n  0% {\n    stroke-dashoffset: 20;\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n`;\n\nexport const TradePanel: React.FC = () => {\n  const [form, setForm] = useState<TradeForm>({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 1,\n    paymentType: 'upfront',\n  });\n\n  const [calculation, setCalculation] = useState<{\n    distance: number;\n    travelTime: number;\n    shipTime: number;\n    interestRate: number;\n    totalCost: number;\n    timeDilation: number;\n  } | null>(null);\n\n  const toast = useToast();\n\n  const calculateTradeParameters = (distance: number, paymentType: 'upfront' | 'on_delivery') => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792.458; // km/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO; // km/s\n    const AU_TO_KM = 149597870.7; // 1 AU in km\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const DAYS_PER_YEAR = 365.25;\n    \n    // Convert distance from AU to km\n    const distanceKm = distance * AU_TO_KM;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceKm / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate years for interest rates\n    const earthYears = earthTimeDays / DAYS_PER_YEAR;\n    const shipYears = shipTimeDays / DAYS_PER_YEAR;\n\n    // Calculate interest rates based on payment type\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n    let effectiveInterestRate;\n    \n    if (paymentType === 'upfront') {\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears * timeDilationFactor) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = Math.max(1, form.quantity) * 1000; // Base cost per unit, minimum 1 unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n\n    return {\n      distance: parseFloat(distance.toFixed(2)),\n      travelTime: parseFloat(earthTimeDays.toFixed(2)),\n      shipTime: parseFloat(shipTimeDays.toFixed(2)),\n      timeDilation: parseFloat(timeDilationFactor.toFixed(4)),\n      interestRate: effectiveInterestRate,\n      totalCost: parseFloat(totalCost.toFixed(2))\n    };\n  };\n\n  const handleSubmit = async () => {\n    if (form.quantity <= 0) {\n      toast({\n        title: 'Invalid Quantity',\n        description: 'Please enter a quantity greater than 0',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    \n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n    \n    // Send calculation details to the chat interface\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: '!explain_calculation:' + JSON.stringify({\n            sourcePlanet: form.sourcePlanet,\n            destinationPlanet: form.destinationPlanet,\n            distance,\n            travelTime: result.travelTime,\n            shipTime: result.shipTime,\n            timeDilation: result.timeDilation,\n            interestRate: result.interestRate,\n            totalCost: result.totalCost,\n            paymentType: form.paymentType,\n            goods: form.goods,\n            quantity: form.quantity\n          })\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send calculation details');\n      }\n\n      toast({\n        title: 'Trade Calculation Complete',\n        description: 'Calculation details have been sent to the chat.',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Failed to send calculation details:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to send calculation details to chat',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Add this before the return statement\n  const distance = useMemo(() => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    return Math.abs(destDistance - sourceDistance);\n  }, [form.sourcePlanet, form.destinationPlanet]);\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"xl\" boxShadow=\"lg\" h=\"100%\" overflowY=\"auto\">\n      <GameFont />\n      <Global\n        styles={css`\n          @keyframes flow {\n            0% {\n              stroke-dashoffset: 20;\n            }\n            100% {\n              stroke-dashoffset: 0;\n            }\n          }\n        `}\n      />\n      <VStack spacing={4} align=\"stretch\">\n        <Box \n          w=\"100%\" \n          h=\"150px\" \n          bg=\"gray.900\" \n          borderRadius=\"xl\" \n          mb={4} \n          position=\"relative\"\n          overflow=\"hidden\"\n        >\n          {/* Stars background effect */}\n          <Box\n            position=\"absolute\"\n            top={0}\n            left={0}\n            right={0}\n            bottom={0}\n            bgImage=\"radial-gradient(white 1px, transparent 1px)\"\n            backgroundSize=\"15px 15px\"\n            opacity={0.2}\n          />\n          \n          {/* Planets display */}\n          <Flex\n            h=\"100%\"\n            justify=\"space-around\"\n            align=\"center\"\n            position=\"relative\"\n            px={8}\n          >\n            {/* Source Planet */}\n            <VStack spacing={2}>\n              <Circle\n                size={`${PLANET_SIZES[form.sourcePlanet]}px`}\n                bg={PLANET_COLORS[form.sourcePlanet]}\n                boxShadow=\"0 0 20px rgba(255,255,255,0.2)\"\n                border=\"2px solid rgba(255,255,255,0.2)\"\n              />\n              <Text \n                color=\"white\" \n                fontSize=\"xs\" \n                fontWeight=\"medium\"\n                sx={{\n                  fontFamily: \"'Press Start 2P', cursive\",\n                  textShadow: \"0 0 5px rgba(0,255,255,0.5)\",\n                  letterSpacing: \"-0.05em\"\n                }}\n              >\n                {form.sourcePlanet}\n              </Text>\n            </VStack>\n\n            {/* Animated connection line with distance */}\n            <VStack>\n              <svg width=\"200\" height=\"2\" style={{ overflow: 'visible' }}>\n                <line\n                  x1=\"0\"\n                  y1=\"0\"\n                  x2=\"200\"\n                  y2=\"0\"\n                  stroke=\"cyan\"\n                  strokeWidth=\"2\"\n                  strokeDasharray=\"4\"\n                  style={{\n                    animation: 'flow 1s linear infinite',\n                    filter: 'drop-shadow(0 0 8px cyan)',\n                  }}\n                />\n              </svg>\n              <Text\n                color=\"cyan.200\"\n                fontSize=\"xs\"\n                mt={-2}\n                sx={{\n                  fontFamily: \"'Press Start 2P', cursive\",\n                  textShadow: \"0 0 5px rgba(0,255,255,0.5)\",\n                }}\n              >\n                {distance < 1000 \n                  ? `${distance.toFixed(2)} AU`\n                  : `${(distance / 63241.1).toFixed(2)} LY`}\n              </Text>\n            </VStack>\n\n            {/* Destination Planet */}\n            <VStack spacing={2}>\n              <Circle\n                size={`${PLANET_SIZES[form.destinationPlanet]}px`}\n                bg={PLANET_COLORS[form.destinationPlanet]}\n                boxShadow=\"0 0 20px rgba(255,255,255,0.2)\"\n                border=\"2px solid rgba(255,255,255,0.2)\"\n              />\n              <Text \n                color=\"white\" \n                fontSize=\"xs\" \n                fontWeight=\"medium\"\n                sx={{\n                  fontFamily: \"'Press Start 2P', cursive\",\n                  textShadow: \"0 0 5px rgba(0,255,255,0.5)\",\n                  letterSpacing: \"-0.05em\"\n                }}\n              >\n                {form.destinationPlanet}\n              </Text>\n            </VStack>\n          </Flex>\n        </Box>\n\n        <Heading size=\"lg\" mb={2}>Interstellar Trade</Heading>\n        \n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Source Location</FormLabel>\n            <Select\n              value={form.sourcePlanet}\n              onChange={(e) => {\n                setForm({ ...form, sourcePlanet: e.target.value });\n              }}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n            {form.sourcePlanet && (\n              <Text fontSize=\"sm\" color=\"gray.600\" mt={1}>\n                {CELESTIAL_BODY_INFO[form.sourcePlanet]}\n              </Text>\n            )}\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Destination Location</FormLabel>\n            <Select\n              value={form.destinationPlanet}\n              onChange={(e) => {\n                setForm({ ...form, destinationPlanet: e.target.value });\n              }}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n            {form.destinationPlanet && (\n              <Text fontSize=\"sm\" color=\"gray.600\" mt={1}>\n                {CELESTIAL_BODY_INFO[form.destinationPlanet]}\n              </Text>\n            )}\n          </FormControl>\n        </HStack>\n\n        <FormControl>\n          <FormLabel>Goods</FormLabel>\n          <Input\n            value={form.goods}\n            onChange={(e) => setForm({ ...form, goods: e.target.value })}\n            placeholder=\"Enter goods description\"\n          />\n        </FormControl>\n\n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Quantity</FormLabel>\n            <Input\n              type=\"number\"\n              min=\"1\"\n              value={form.quantity}\n              onChange={(e) => setForm({ ...form, quantity: Math.max(1, Number(e.target.value)) })}\n            />\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Payment Type</FormLabel>\n            <Select\n              value={form.paymentType}\n              onChange={(e) => setForm({ ...form, paymentType: e.target.value as 'upfront' | 'on_delivery' })}\n            >\n              <option value=\"upfront\">Pay Upfront</option>\n              <option value=\"on_delivery\">Pay on Delivery</option>\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <Button\n          colorScheme=\"blue\"\n          size=\"lg\"\n          onClick={handleSubmit}\n          mt={4}\n        >\n          Calculate Trade\n        </Button>\n\n        {calculation && (\n          <Box mt={4} p={4} borderRadius=\"md\" bg=\"gray.50\">\n            <StatGroup>\n              <Stat>\n                <StatLabel>Distance</StatLabel>\n                <StatNumber>{calculation.distance.toFixed(2)} AU</StatNumber>\n                <StatHelpText>Astronomical Units</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Earth Time</StatLabel>\n                <StatNumber>{calculation.travelTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>In stationary frame</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Ship Time</StatLabel>\n                <StatNumber>{calculation.shipTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>Due to time dilation</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Time Dilation</StatLabel>\n                <StatNumber>{calculation.timeDilation.toFixed(4)}x</StatNumber>\n                <StatHelpText>Relativistic factor</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Interest Rate</StatLabel>\n                <StatNumber>{(calculation.interestRate * 100).toFixed(4)}%</StatNumber>\n                <StatHelpText>{form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'}</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Total Cost</StatLabel>\n                <StatNumber>{calculation.totalCost.toFixed(2)} credits</StatNumber>\n                <StatHelpText>Including interest</StatHelpText>\n              </Stat>\n            </StatGroup>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}