{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, VStack, HStack, FormControl, FormLabel, Input, Select, Button, Text, useToast, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatGroup, ScaleFade, Image } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,\n  // 4.25 light years\n  'Alpha Centauri A': 271909.7,\n  // 4.3 light years\n  'Alpha Centauri B': 271909.7,\n  // 4.3 light years\n  'Barnard\\'s Star': 379446.6,\n  // 6.0 light years\n  'Wolf 359': 474308.3,\n  // 7.5 light years\n  'Lalande 21185': 515521.8,\n  // 8.15 light years\n  'Sirius A': 537549.4,\n  // 8.5 light years\n  'Sirius B': 537549.4,\n  // 8.5 light years\n\n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1e': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1f': 2529644.0,\n  // 40 light years\n  'Kepler-186f': 3099814.0,\n  // 49 light years\n  'TOI-700d': 6324110.0,\n  // 100 light years\n\n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,\n  // 625 light years\n  'Vega': 158102750.0,\n  // 2500 light years\n  'Antares': 316205500.0,\n  // 5000 light years\n  'Deneb': 474308250.0,\n  // 7500 light years\n\n  // Galactic Features\n  'Orion Nebula': 853754850.0,\n  // 13,500 light years\n  'Galactic Center': 1580275000.0,\n  // 25,000 light years\n  'LMC': 3162055000.0 // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\n// Add planet images data\nconst PLANET_IMAGES = {\n  Mercury: 'https://images.nasa.gov/images/as11-40-5875~medium.jpg',\n  Venus: 'https://images.nasa.gov/images/PIA00271~medium.jpg',\n  Earth: 'https://images.nasa.gov/images/as17-148-22727~medium.jpg',\n  Mars: 'https://images.nasa.gov/images/PIA00407~medium.jpg',\n  Jupiter: 'https://images.nasa.gov/images/PIA00343~medium.jpg',\n  Saturn: 'https://images.nasa.gov/images/PIA01364~medium.jpg',\n  Uranus: 'https://images.nasa.gov/images/PIA18182~medium.jpg',\n  Neptune: 'https://images.nasa.gov/images/PIA01492~medium.jpg',\n  'Proxima Centauri b': 'https://images.nasa.gov/images/PIA23005~medium.jpg',\n  'Alpha Centauri A': 'https://images.nasa.gov/images/PIA12348~medium.jpg',\n  'Alpha Centauri B': 'https://images.nasa.gov/images/PIA12349~medium.jpg',\n  'Barnard\\'s Star': 'https://images.nasa.gov/images/PIA22916~medium.jpg',\n  'Wolf 359': 'https://images.nasa.gov/images/PIA23645~medium.jpg',\n  'Lalande 21185': 'https://images.nasa.gov/images/PIA23005~medium.jpg',\n  'Sirius A': 'https://images.nasa.gov/images/PIA18370~medium.jpg',\n  'Sirius B': 'https://images.nasa.gov/images/PIA18371~medium.jpg',\n  'TRAPPIST-1d': 'https://images.nasa.gov/images/PIA21425~medium.jpg',\n  'TRAPPIST-1e': 'https://images.nasa.gov/images/PIA21426~medium.jpg',\n  'TRAPPIST-1f': 'https://images.nasa.gov/images/PIA21427~medium.jpg',\n  'Kepler-186f': 'https://images.nasa.gov/images/PIA18003~medium.jpg',\n  'TOI-700d': 'https://images.nasa.gov/images/PIA23319~medium.jpg',\n  'Betelgeuse': 'https://images.nasa.gov/images/PIA15817~medium.jpg',\n  'Vega': 'https://images.nasa.gov/images/PIA18370~medium.jpg',\n  'Antares': 'https://images.nasa.gov/images/PIA15817~medium.jpg',\n  'Deneb': 'https://images.nasa.gov/images/PIA18370~medium.jpg',\n  'Orion Nebula': 'https://images.nasa.gov/images/PIA08653~medium.jpg',\n  'Galactic Center': 'https://images.nasa.gov/images/PIA19339~medium.jpg',\n  'LMC': 'https://images.nasa.gov/images/PIA15817~medium.jpg'\n};\nexport const TradePanel = () => {\n  _s();\n  const [form, setForm] = useState({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront'\n  });\n  const [calculation, setCalculation] = useState(null);\n  const [selectedSource, setSelectedSource] = useState(false);\n  const [selectedDest, setSelectedDest] = useState(false);\n  const toast = useToast();\n  const calculateTradeParameters = (distance, paymentType) => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const SECONDS_PER_YEAR = 31557600; // 365.25 * 24 * 60 * 60\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceMeters / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate years for interest\n    const earthYears = earthTimeSeconds / SECONDS_PER_YEAR;\n\n    // Calculate interest rates based on payment type\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment, calculate compound interest over Earth time\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      const effectiveYears = earthYears * timeDilationFactor;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, effectiveYears) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = Math.max(1, form.quantity) * 1000; // Base cost per unit, minimum 1 unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n\n    // For debugging\n    console.log({\n      distance,\n      earthTimeDays,\n      shipTimeDays,\n      timeDilationFactor,\n      effectiveInterestRate,\n      totalCost,\n      baseCost,\n      earthYears\n    });\n    return {\n      distance,\n      travelTime: earthTimeDays,\n      shipTime: shipTimeDays,\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate,\n      totalCost\n    };\n  };\n  const handleSubmit = async () => {\n    if (form.quantity <= 0) {\n      toast({\n        title: 'Invalid Quantity',\n        description: 'Please enter a quantity greater than 0',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n      return;\n    }\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n\n    // Send calculation details to the chat interface\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: '!explain_calculation:' + JSON.stringify({\n            sourcePlanet: form.sourcePlanet,\n            destinationPlanet: form.destinationPlanet,\n            distance,\n            travelTime: result.travelTime,\n            shipTime: result.shipTime,\n            timeDilation: result.timeDilation,\n            interestRate: result.interestRate,\n            totalCost: result.totalCost,\n            paymentType: form.paymentType,\n            goods: form.goods,\n            quantity: form.quantity\n          })\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send calculation details');\n      }\n      toast({\n        title: 'Trade Calculation Complete',\n        description: 'Calculation details have been sent to the chat.',\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Failed to send calculation details:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to send calculation details to chat',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"xl\",\n    boxShadow: \"lg\",\n    h: \"100%\",\n    overflowY: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: 2,\n        children: \"Interstellar Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        align: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Source Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            position: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              value: form.sourcePlanet,\n              onChange: e => {\n                setForm({\n                  ...form,\n                  sourcePlanet: e.target.value\n                });\n                setSelectedSource(true);\n                setTimeout(() => setSelectedSource(false), 1000);\n              },\n              children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: planet,\n                children: planet\n              }, planet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), form.sourcePlanet && /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              position: \"relative\",\n              width: \"150px\",\n              height: \"150px\",\n              overflow: \"hidden\",\n              children: [/*#__PURE__*/_jsxDEV(ScaleFade, {\n                in: true,\n                initialScale: 0.8,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  transition: \"all 0.5s ease-in-out\",\n                  transform: selectedSource ? \"scale(1.2)\" : \"scale(1)\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: PLANET_IMAGES[form.sourcePlanet],\n                    alt: form.sourcePlanet,\n                    width: \"150px\",\n                    height: \"150px\",\n                    objectFit: \"cover\",\n                    borderRadius: \"full\",\n                    boxShadow: selectedSource ? \"0 0 20px rgba(66, 153, 225, 0.6)\" : \"none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                color: \"gray.600\",\n                mt: 2,\n                textAlign: \"center\",\n                children: CELESTIAL_BODY_INFO[form.sourcePlanet]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Destination Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            position: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              value: form.destinationPlanet,\n              onChange: e => {\n                setForm({\n                  ...form,\n                  destinationPlanet: e.target.value\n                });\n                setSelectedDest(true);\n                setTimeout(() => setSelectedDest(false), 1000);\n              },\n              children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: planet,\n                children: planet\n              }, planet, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), form.destinationPlanet && /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              position: \"relative\",\n              width: \"150px\",\n              height: \"150px\",\n              overflow: \"hidden\",\n              children: [/*#__PURE__*/_jsxDEV(ScaleFade, {\n                in: true,\n                initialScale: 0.8,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  transition: \"all 0.5s ease-in-out\",\n                  transform: selectedDest ? \"scale(1.2)\" : \"scale(1)\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: PLANET_IMAGES[form.destinationPlanet],\n                    alt: form.destinationPlanet,\n                    width: \"150px\",\n                    height: \"150px\",\n                    objectFit: \"cover\",\n                    borderRadius: \"full\",\n                    boxShadow: selectedDest ? \"0 0 20px rgba(66, 153, 225, 0.6)\" : \"none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                color: \"gray.600\",\n                mt: 2,\n                textAlign: \"center\",\n                children: CELESTIAL_BODY_INFO[form.destinationPlanet]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Goods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: form.goods,\n          onChange: e => setForm({\n            ...form,\n            goods: e.target.value\n          }),\n          placeholder: \"Enter goods description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"1\",\n            value: form.quantity,\n            onChange: e => setForm({\n              ...form,\n              quantity: Math.max(1, Number(e.target.value))\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.paymentType,\n            onChange: e => setForm({\n              ...form,\n              paymentType: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"upfront\",\n              children: \"Pay Upfront\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"on_delivery\",\n              children: \"Pay on Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"lg\",\n        onClick: handleSubmit,\n        mt: 4,\n        children: \"Calculate Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), calculation && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        p: 4,\n        borderRadius: \"md\",\n        bg: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(StatGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.distance.toFixed(2), \" AU\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Astronomical Units\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Earth Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.travelTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"In stationary frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Ship Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.shipTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Due to time dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Time Dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.timeDilation.toFixed(4), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Relativistic factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [(calculation.interestRate * 100).toFixed(4), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.totalCost.toFixed(2), \" credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Including interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(TradePanel, \"JjlCtJLKrEqK/1QfC+jWAOtA97Y=\", false, function () {\n  return [useToast];\n});\n_c = TradePanel;\nvar _c;\n$RefreshReg$(_c, \"TradePanel\");","map":{"version":3,"names":["React","useState","Box","VStack","HStack","FormControl","FormLabel","Input","Select","Button","Text","useToast","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatGroup","ScaleFade","Image","jsxDEV","_jsxDEV","PLANET_DISTANCES","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","CELESTIAL_BODY_INFO","PLANET_IMAGES","TradePanel","_s","form","setForm","sourcePlanet","destinationPlanet","goods","quantity","paymentType","calculation","setCalculation","selectedSource","setSelectedSource","selectedDest","setSelectedDest","toast","calculateTradeParameters","distance","SPEED_OF_LIGHT","SHIP_SPEED_RATIO","SHIP_SPEED","AU_TO_METERS","SECONDS_PER_DAY","SECONDS_PER_YEAR","BASE_INTEREST_RATE","distanceMeters","timeDilationFactor","Math","sqrt","pow","earthTimeSeconds","shipTimeSeconds","earthTimeDays","shipTimeDays","earthYears","effectiveInterestRate","effectiveYears","baseCost","max","totalCost","console","log","travelTime","shipTime","timeDilation","interestRate","handleSubmit","title","description","status","duration","isClosable","sourceDistance","destDistance","abs","result","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","error","p","bg","borderRadius","boxShadow","h","overflowY","children","spacing","align","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","position","value","onChange","e","target","setTimeout","Object","keys","map","planet","mt","width","height","overflow","in","initialScale","transition","transform","src","alt","objectFit","fontSize","color","textAlign","placeholder","type","min","Number","colorScheme","onClick","toFixed","_c","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Text,\n  useToast,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatGroup,\n  ScaleFade,\n  Image,\n} from '@chakra-ui/react';\n\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES: Record<string, number> = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  \n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,  // 4.25 light years\n  'Alpha Centauri A': 271909.7,    // 4.3 light years\n  'Alpha Centauri B': 271909.7,    // 4.3 light years\n  'Barnard\\'s Star': 379446.6,     // 6.0 light years\n  'Wolf 359': 474308.3,            // 7.5 light years\n  'Lalande 21185': 515521.8,       // 8.15 light years\n  'Sirius A': 537549.4,            // 8.5 light years\n  'Sirius B': 537549.4,            // 8.5 light years\n  \n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,       // 40 light years\n  'TRAPPIST-1e': 2529644.0,       // 40 light years\n  'TRAPPIST-1f': 2529644.0,       // 40 light years\n  'Kepler-186f': 3099814.0,       // 49 light years\n  'TOI-700d': 6324110.0,          // 100 light years\n  \n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,       // 625 light years\n  'Vega': 158102750.0,            // 2500 light years\n  'Antares': 316205500.0,         // 5000 light years\n  'Deneb': 474308250.0,           // 7500 light years\n  \n  // Galactic Features\n  'Orion Nebula': 853754850.0,    // 13,500 light years\n  'Galactic Center': 1580275000.0, // 25,000 light years\n  'LMC': 3162055000.0,            // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO: Record<string, string> = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\n// Add planet images data\nconst PLANET_IMAGES: Record<string, string> = {\n  Mercury: 'https://images.nasa.gov/images/as11-40-5875~medium.jpg',\n  Venus: 'https://images.nasa.gov/images/PIA00271~medium.jpg',\n  Earth: 'https://images.nasa.gov/images/as17-148-22727~medium.jpg',\n  Mars: 'https://images.nasa.gov/images/PIA00407~medium.jpg',\n  Jupiter: 'https://images.nasa.gov/images/PIA00343~medium.jpg',\n  Saturn: 'https://images.nasa.gov/images/PIA01364~medium.jpg',\n  Uranus: 'https://images.nasa.gov/images/PIA18182~medium.jpg',\n  Neptune: 'https://images.nasa.gov/images/PIA01492~medium.jpg',\n  'Proxima Centauri b': 'https://images.nasa.gov/images/PIA23005~medium.jpg',\n  'Alpha Centauri A': 'https://images.nasa.gov/images/PIA12348~medium.jpg',\n  'Alpha Centauri B': 'https://images.nasa.gov/images/PIA12349~medium.jpg',\n  'Barnard\\'s Star': 'https://images.nasa.gov/images/PIA22916~medium.jpg',\n  'Wolf 359': 'https://images.nasa.gov/images/PIA23645~medium.jpg',\n  'Lalande 21185': 'https://images.nasa.gov/images/PIA23005~medium.jpg',\n  'Sirius A': 'https://images.nasa.gov/images/PIA18370~medium.jpg',\n  'Sirius B': 'https://images.nasa.gov/images/PIA18371~medium.jpg',\n  'TRAPPIST-1d': 'https://images.nasa.gov/images/PIA21425~medium.jpg',\n  'TRAPPIST-1e': 'https://images.nasa.gov/images/PIA21426~medium.jpg',\n  'TRAPPIST-1f': 'https://images.nasa.gov/images/PIA21427~medium.jpg',\n  'Kepler-186f': 'https://images.nasa.gov/images/PIA18003~medium.jpg',\n  'TOI-700d': 'https://images.nasa.gov/images/PIA23319~medium.jpg',\n  'Betelgeuse': 'https://images.nasa.gov/images/PIA15817~medium.jpg',\n  'Vega': 'https://images.nasa.gov/images/PIA18370~medium.jpg',\n  'Antares': 'https://images.nasa.gov/images/PIA15817~medium.jpg',\n  'Deneb': 'https://images.nasa.gov/images/PIA18370~medium.jpg',\n  'Orion Nebula': 'https://images.nasa.gov/images/PIA08653~medium.jpg',\n  'Galactic Center': 'https://images.nasa.gov/images/PIA19339~medium.jpg',\n  'LMC': 'https://images.nasa.gov/images/PIA15817~medium.jpg'\n};\n\nexport const TradePanel: React.FC = () => {\n  const [form, setForm] = useState<TradeForm>({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront',\n  });\n\n  const [calculation, setCalculation] = useState<{\n    distance: number;\n    travelTime: number;\n    shipTime: number;\n    interestRate: number;\n    totalCost: number;\n    timeDilation: number;\n  } | null>(null);\n\n  const [selectedSource, setSelectedSource] = useState(false);\n  const [selectedDest, setSelectedDest] = useState(false);\n\n  const toast = useToast();\n\n  const calculateTradeParameters = (distance: number, paymentType: 'upfront' | 'on_delivery') => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const SECONDS_PER_YEAR = 31557600; // 365.25 * 24 * 60 * 60\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceMeters / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate years for interest\n    const earthYears = earthTimeSeconds / SECONDS_PER_YEAR;\n\n    // Calculate interest rates based on payment type\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment, calculate compound interest over Earth time\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      const effectiveYears = earthYears * timeDilationFactor;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, effectiveYears) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = Math.max(1, form.quantity) * 1000; // Base cost per unit, minimum 1 unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n\n    // For debugging\n    console.log({\n      distance,\n      earthTimeDays,\n      shipTimeDays,\n      timeDilationFactor,\n      effectiveInterestRate,\n      totalCost,\n      baseCost,\n      earthYears,\n    });\n\n    return {\n      distance,\n      travelTime: earthTimeDays,\n      shipTime: shipTimeDays,\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate,\n      totalCost,\n    };\n  };\n\n  const handleSubmit = async () => {\n    if (form.quantity <= 0) {\n      toast({\n        title: 'Invalid Quantity',\n        description: 'Please enter a quantity greater than 0',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    \n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n    \n    // Send calculation details to the chat interface\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: '!explain_calculation:' + JSON.stringify({\n            sourcePlanet: form.sourcePlanet,\n            destinationPlanet: form.destinationPlanet,\n            distance,\n            travelTime: result.travelTime,\n            shipTime: result.shipTime,\n            timeDilation: result.timeDilation,\n            interestRate: result.interestRate,\n            totalCost: result.totalCost,\n            paymentType: form.paymentType,\n            goods: form.goods,\n            quantity: form.quantity\n          })\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send calculation details');\n      }\n\n      toast({\n        title: 'Trade Calculation Complete',\n        description: 'Calculation details have been sent to the chat.',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Failed to send calculation details:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to send calculation details to chat',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"xl\" boxShadow=\"lg\" h=\"100%\" overflowY=\"auto\">\n      <VStack spacing={4} align=\"stretch\">\n        <Heading size=\"lg\" mb={2}>Interstellar Trade</Heading>\n        \n        <HStack spacing={4} align=\"flex-start\">\n          <FormControl>\n            <FormLabel>Source Location</FormLabel>\n            <Box position=\"relative\">\n              <Select\n                value={form.sourcePlanet}\n                onChange={(e) => {\n                  setForm({ ...form, sourcePlanet: e.target.value });\n                  setSelectedSource(true);\n                  setTimeout(() => setSelectedSource(false), 1000);\n                }}\n              >\n                {Object.keys(PLANET_DISTANCES).map(planet => (\n                  <option key={planet} value={planet}>{planet}</option>\n                ))}\n              </Select>\n              {form.sourcePlanet && (\n                <Box\n                  mt={2}\n                  position=\"relative\"\n                  width=\"150px\"\n                  height=\"150px\"\n                  overflow=\"hidden\"\n                >\n                  <ScaleFade in={true} initialScale={0.8}>\n                    <Box\n                      transition=\"all 0.5s ease-in-out\"\n                      transform={selectedSource ? \"scale(1.2)\" : \"scale(1)\"}\n                    >\n                      <Image\n                        src={PLANET_IMAGES[form.sourcePlanet]}\n                        alt={form.sourcePlanet}\n                        width=\"150px\"\n                        height=\"150px\"\n                        objectFit=\"cover\"\n                        borderRadius=\"full\"\n                        boxShadow={selectedSource ? \"0 0 20px rgba(66, 153, 225, 0.6)\" : \"none\"}\n                      />\n                    </Box>\n                  </ScaleFade>\n                  <Text \n                    fontSize=\"sm\" \n                    color=\"gray.600\" \n                    mt={2}\n                    textAlign=\"center\"\n                  >\n                    {CELESTIAL_BODY_INFO[form.sourcePlanet]}\n                  </Text>\n                </Box>\n              )}\n            </Box>\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Destination Location</FormLabel>\n            <Box position=\"relative\">\n              <Select\n                value={form.destinationPlanet}\n                onChange={(e) => {\n                  setForm({ ...form, destinationPlanet: e.target.value });\n                  setSelectedDest(true);\n                  setTimeout(() => setSelectedDest(false), 1000);\n                }}\n              >\n                {Object.keys(PLANET_DISTANCES).map(planet => (\n                  <option key={planet} value={planet}>{planet}</option>\n                ))}\n              </Select>\n              {form.destinationPlanet && (\n                <Box\n                  mt={2}\n                  position=\"relative\"\n                  width=\"150px\"\n                  height=\"150px\"\n                  overflow=\"hidden\"\n                >\n                  <ScaleFade in={true} initialScale={0.8}>\n                    <Box\n                      transition=\"all 0.5s ease-in-out\"\n                      transform={selectedDest ? \"scale(1.2)\" : \"scale(1)\"}\n                    >\n                      <Image\n                        src={PLANET_IMAGES[form.destinationPlanet]}\n                        alt={form.destinationPlanet}\n                        width=\"150px\"\n                        height=\"150px\"\n                        objectFit=\"cover\"\n                        borderRadius=\"full\"\n                        boxShadow={selectedDest ? \"0 0 20px rgba(66, 153, 225, 0.6)\" : \"none\"}\n                      />\n                    </Box>\n                  </ScaleFade>\n                  <Text \n                    fontSize=\"sm\" \n                    color=\"gray.600\" \n                    mt={2}\n                    textAlign=\"center\"\n                  >\n                    {CELESTIAL_BODY_INFO[form.destinationPlanet]}\n                  </Text>\n                </Box>\n              )}\n            </Box>\n          </FormControl>\n        </HStack>\n\n        <FormControl>\n          <FormLabel>Goods</FormLabel>\n          <Input\n            value={form.goods}\n            onChange={(e) => setForm({ ...form, goods: e.target.value })}\n            placeholder=\"Enter goods description\"\n          />\n        </FormControl>\n\n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Quantity</FormLabel>\n            <Input\n              type=\"number\"\n              min=\"1\"\n              value={form.quantity}\n              onChange={(e) => setForm({ ...form, quantity: Math.max(1, Number(e.target.value)) })}\n            />\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Payment Type</FormLabel>\n            <Select\n              value={form.paymentType}\n              onChange={(e) => setForm({ ...form, paymentType: e.target.value as 'upfront' | 'on_delivery' })}\n            >\n              <option value=\"upfront\">Pay Upfront</option>\n              <option value=\"on_delivery\">Pay on Delivery</option>\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <Button\n          colorScheme=\"blue\"\n          size=\"lg\"\n          onClick={handleSubmit}\n          mt={4}\n        >\n          Calculate Trade\n        </Button>\n\n        {calculation && (\n          <Box mt={4} p={4} borderRadius=\"md\" bg=\"gray.50\">\n            <StatGroup>\n              <Stat>\n                <StatLabel>Distance</StatLabel>\n                <StatNumber>{calculation.distance.toFixed(2)} AU</StatNumber>\n                <StatHelpText>Astronomical Units</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Earth Time</StatLabel>\n                <StatNumber>{calculation.travelTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>In stationary frame</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Ship Time</StatLabel>\n                <StatNumber>{calculation.shipTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>Due to time dilation</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Time Dilation</StatLabel>\n                <StatNumber>{calculation.timeDilation.toFixed(4)}x</StatNumber>\n                <StatHelpText>Relativistic factor</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Interest Rate</StatLabel>\n                <StatNumber>{(calculation.interestRate * 100).toFixed(4)}%</StatNumber>\n                <StatHelpText>{form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'}</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Total Cost</StatLabel>\n                <StatNumber>{calculation.totalCost.toFixed(2)} credits</StatNumber>\n                <StatHelpText>Including interest</StatHelpText>\n              </Stat>\n            </StatGroup>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}