{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, VStack, HStack, FormControl, FormLabel, Input, Select, Button, useToast, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatGroup } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Planet data in AU (Astronomical Units)\nconst PLANET_DISTANCES = {\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069\n};\nexport const TradePanel = () => {\n  _s();\n  const [form, setForm] = useState({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront'\n  });\n  const [calculation, setCalculation] = useState(null);\n  const toast = useToast();\n  const calculateTradeParameters = (distance, paymentType) => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_YEAR = 365.25 * 24 * 60 * 60;\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - SHIP_SPEED_RATIO ** 2);\n\n    // Calculate travel time in ship's frame (proper time)\n    const shipTravelTimeSeconds = distanceMeters / SHIP_SPEED / timeDilationFactor;\n    const shipTravelTimeYears = shipTravelTimeSeconds / SECONDS_PER_YEAR;\n\n    // Calculate travel time in stationary frame (coordinate time)\n    const stationaryTravelTimeSeconds = distanceMeters / SHIP_SPEED;\n    const stationaryTravelTimeYears = stationaryTravelTimeSeconds / SECONDS_PER_YEAR;\n\n    // Calculate interest rates based on Krugman's paper\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment:\n      // The interest rate needs to account for the fact that the money could have been\n      // invested in the origin planet's frame of reference\n      effectiveInterestRate = (1 + BASE_INTEREST_RATE) ** stationaryTravelTimeYears - 1;\n    } else {\n      // For payment on delivery:\n      // The interest rate needs to account for both time dilation and the fact that\n      // payment is delayed in both reference frames\n      effectiveInterestRate = (1 + BASE_INTEREST_RATE) ** (stationaryTravelTimeYears * timeDilationFactor) - 1;\n    }\n    return {\n      distance,\n      travelTime: stationaryTravelTimeYears * 365.25,\n      // Convert to days\n      shipTime: shipTravelTimeYears * 365.25,\n      // Convert to days\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate\n    };\n  };\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    const {\n      travelTime,\n      shipTime,\n      timeDilation,\n      interestRate\n    } = calculateTradeParameters(distance, form.paymentType);\n    const baseCost = form.quantity * 100; // Base cost per unit\n    const totalCost = baseCost * (1 + interestRate);\n    setCalculation({\n      distance,\n      travelTime,\n      shipTime,\n      timeDilation,\n      interestRate,\n      totalCost\n    });\n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 3000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"xl\",\n    boxShadow: \"lg\",\n    h: \"100%\",\n    overflowY: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        mb: 2,\n        children: \"Interstellar Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Source Planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.sourcePlanet,\n            onChange: e => setForm({\n              ...form,\n              sourcePlanet: e.target.value\n            }),\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Destination Planet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.destinationPlanet,\n            onChange: e => setForm({\n              ...form,\n              destinationPlanet: e.target.value\n            }),\n            children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: planet,\n              children: planet\n            }, planet, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Goods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: form.goods,\n          onChange: e => setForm({\n            ...form,\n            goods: e.target.value\n          }),\n          placeholder: \"Enter goods description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: form.quantity,\n            onChange: e => setForm({\n              ...form,\n              quantity: Number(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: form.paymentType,\n            onChange: e => setForm({\n              ...form,\n              paymentType: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"upfront\",\n              children: \"Pay Upfront\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"on_delivery\",\n              children: \"Pay on Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"lg\",\n        onClick: handleSubmit,\n        mt: 4,\n        children: \"Calculate Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), calculation && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        p: 4,\n        borderRadius: \"md\",\n        bg: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(StatGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.distance.toFixed(2), \" AU\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Astronomical Units\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Earth Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.travelTime.toFixed(1), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"In stationary frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Ship Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.shipTime.toFixed(1), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Due to time dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Time Dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.timeDilation.toFixed(2), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Relativistic factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [(calculation.interestRate * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [calculation.totalCost.toFixed(2), \" credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Including interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(TradePanel, \"bBWVuVU5V9KEeSdq7YzTr2Uit/I=\", false, function () {\n  return [useToast];\n});\n_c = TradePanel;\nvar _c;\n$RefreshReg$(_c, \"TradePanel\");","map":{"version":3,"names":["React","useState","Box","VStack","HStack","FormControl","FormLabel","Input","Select","Button","useToast","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatGroup","jsxDEV","_jsxDEV","PLANET_DISTANCES","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","TradePanel","_s","form","setForm","sourcePlanet","destinationPlanet","goods","quantity","paymentType","calculation","setCalculation","toast","calculateTradeParameters","distance","SPEED_OF_LIGHT","SHIP_SPEED_RATIO","SHIP_SPEED","AU_TO_METERS","SECONDS_PER_YEAR","BASE_INTEREST_RATE","distanceMeters","timeDilationFactor","Math","sqrt","shipTravelTimeSeconds","shipTravelTimeYears","stationaryTravelTimeSeconds","stationaryTravelTimeYears","effectiveInterestRate","travelTime","shipTime","timeDilation","interestRate","handleSubmit","sourceDistance","destDistance","abs","baseCost","totalCost","title","description","status","duration","isClosable","p","bg","borderRadius","boxShadow","h","overflowY","children","spacing","align","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","keys","map","planet","placeholder","type","Number","colorScheme","onClick","mt","toFixed","_c","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Text,\n  useToast,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatGroup,\n} from '@chakra-ui/react';\n\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Planet data in AU (Astronomical Units)\nconst PLANET_DISTANCES: Record<string, number> = {\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n};\n\nexport const TradePanel: React.FC = () => {\n  const [form, setForm] = useState<TradeForm>({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront',\n  });\n\n  const [calculation, setCalculation] = useState<{\n    distance: number;\n    travelTime: number;\n    shipTime: number;\n    interestRate: number;\n    totalCost: number;\n    timeDilation: number;\n  } | null>(null);\n\n  const toast = useToast();\n\n  const calculateTradeParameters = (distance: number, paymentType: 'upfront' | 'on_delivery') => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_YEAR = 365.25 * 24 * 60 * 60;\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - (SHIP_SPEED_RATIO ** 2));\n\n    // Calculate travel time in ship's frame (proper time)\n    const shipTravelTimeSeconds = (distanceMeters / SHIP_SPEED) / timeDilationFactor;\n    const shipTravelTimeYears = shipTravelTimeSeconds / SECONDS_PER_YEAR;\n\n    // Calculate travel time in stationary frame (coordinate time)\n    const stationaryTravelTimeSeconds = distanceMeters / SHIP_SPEED;\n    const stationaryTravelTimeYears = stationaryTravelTimeSeconds / SECONDS_PER_YEAR;\n\n    // Calculate interest rates based on Krugman's paper\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment:\n      // The interest rate needs to account for the fact that the money could have been\n      // invested in the origin planet's frame of reference\n      effectiveInterestRate = (1 + BASE_INTEREST_RATE) ** stationaryTravelTimeYears - 1;\n    } else {\n      // For payment on delivery:\n      // The interest rate needs to account for both time dilation and the fact that\n      // payment is delayed in both reference frames\n      effectiveInterestRate = (1 + BASE_INTEREST_RATE) ** (stationaryTravelTimeYears * timeDilationFactor) - 1;\n    }\n\n    return {\n      distance,\n      travelTime: stationaryTravelTimeYears * 365.25, // Convert to days\n      shipTime: shipTravelTimeYears * 365.25, // Convert to days\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate,\n    };\n  };\n\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    \n    const {\n      travelTime,\n      shipTime,\n      timeDilation,\n      interestRate,\n    } = calculateTradeParameters(distance, form.paymentType);\n\n    const baseCost = form.quantity * 100; // Base cost per unit\n    const totalCost = baseCost * (1 + interestRate);\n\n    setCalculation({\n      distance,\n      travelTime,\n      shipTime,\n      timeDilation,\n      interestRate,\n      totalCost,\n    });\n    \n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"xl\" boxShadow=\"lg\" h=\"100%\" overflowY=\"auto\">\n      <VStack spacing={4} align=\"stretch\">\n        <Heading size=\"lg\" mb={2}>Interstellar Trade</Heading>\n        \n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Source Planet</FormLabel>\n            <Select\n              value={form.sourcePlanet}\n              onChange={(e) => setForm({ ...form, sourcePlanet: e.target.value })}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Destination Planet</FormLabel>\n            <Select\n              value={form.destinationPlanet}\n              onChange={(e) => setForm({ ...form, destinationPlanet: e.target.value })}\n            >\n              {Object.keys(PLANET_DISTANCES).map(planet => (\n                <option key={planet} value={planet}>{planet}</option>\n              ))}\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <FormControl>\n          <FormLabel>Goods</FormLabel>\n          <Input\n            value={form.goods}\n            onChange={(e) => setForm({ ...form, goods: e.target.value })}\n            placeholder=\"Enter goods description\"\n          />\n        </FormControl>\n\n        <HStack spacing={4}>\n          <FormControl>\n            <FormLabel>Quantity</FormLabel>\n            <Input\n              type=\"number\"\n              value={form.quantity}\n              onChange={(e) => setForm({ ...form, quantity: Number(e.target.value) })}\n            />\n          </FormControl>\n\n          <FormControl>\n            <FormLabel>Payment Type</FormLabel>\n            <Select\n              value={form.paymentType}\n              onChange={(e) => setForm({ ...form, paymentType: e.target.value as 'upfront' | 'on_delivery' })}\n            >\n              <option value=\"upfront\">Pay Upfront</option>\n              <option value=\"on_delivery\">Pay on Delivery</option>\n            </Select>\n          </FormControl>\n        </HStack>\n\n        <Button\n          colorScheme=\"blue\"\n          size=\"lg\"\n          onClick={handleSubmit}\n          mt={4}\n        >\n          Calculate Trade\n        </Button>\n\n        {calculation && (\n          <Box mt={4} p={4} borderRadius=\"md\" bg=\"gray.50\">\n            <StatGroup>\n              <Stat>\n                <StatLabel>Distance</StatLabel>\n                <StatNumber>{calculation.distance.toFixed(2)} AU</StatNumber>\n                <StatHelpText>Astronomical Units</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Earth Time</StatLabel>\n                <StatNumber>{calculation.travelTime.toFixed(1)} days</StatNumber>\n                <StatHelpText>In stationary frame</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Ship Time</StatLabel>\n                <StatNumber>{calculation.shipTime.toFixed(1)} days</StatNumber>\n                <StatHelpText>Due to time dilation</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Time Dilation</StatLabel>\n                <StatNumber>{calculation.timeDilation.toFixed(2)}x</StatNumber>\n                <StatHelpText>Relativistic factor</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Interest Rate</StatLabel>\n                <StatNumber>{(calculation.interestRate * 100).toFixed(2)}%</StatNumber>\n                <StatHelpText>{form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'}</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel>Total Cost</StatLabel>\n                <StatNumber>{calculation.totalCost.toFixed(2)} credits</StatNumber>\n                <StatHelpText>Including interest</StatHelpText>\n              </Stat>\n            </StatGroup>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,MAAM,EACNC,MAAM,EAENC,QAAQ,EACRC,OAAO,EACPC,IAAI,EACJC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,SAAS,QACJ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B;AACA,MAAMC,gBAAwC,GAAG;EAC/CC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE,KAAK;EACbC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAY;IAC1C+B,YAAY,EAAE,OAAO;IACrBC,iBAAiB,EAAE,MAAM;IACzBC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,CAAC;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAOpC,IAAI,CAAC;EAEf,MAAMsC,KAAK,GAAG7B,QAAQ,CAAC,CAAC;EAExB,MAAM8B,wBAAwB,GAAGA,CAACC,QAAgB,EAAEL,WAAsC,KAAK;IAC7F;IACA,MAAMM,cAAc,GAAG,SAAS,CAAC,CAAC;IAClC,MAAMC,gBAAgB,GAAG,GAAG,CAAC,CAAC;IAC9B,MAAMC,UAAU,GAAGF,cAAc,GAAGC,gBAAgB;IACpD,MAAME,YAAY,GAAG,YAAY,CAAC,CAAC;IACnC,MAAMC,gBAAgB,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IAC9C,MAAMC,kBAAkB,GAAG,IAAI,CAAC,CAAC;;IAEjC;IACA,MAAMC,cAAc,GAAGP,QAAQ,GAAGI,YAAY;;IAE9C;IACA;IACA,MAAMI,kBAAkB,GAAG,CAAC,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAIR,gBAAgB,IAAI,CAAE,CAAC;;IAErE;IACA,MAAMS,qBAAqB,GAAIJ,cAAc,GAAGJ,UAAU,GAAIK,kBAAkB;IAChF,MAAMI,mBAAmB,GAAGD,qBAAqB,GAAGN,gBAAgB;;IAEpE;IACA,MAAMQ,2BAA2B,GAAGN,cAAc,GAAGJ,UAAU;IAC/D,MAAMW,yBAAyB,GAAGD,2BAA2B,GAAGR,gBAAgB;;IAEhF;IACA,IAAIU,qBAAqB;IACzB,IAAIpB,WAAW,KAAK,SAAS,EAAE;MAC7B;MACA;MACA;MACAoB,qBAAqB,GAAG,CAAC,CAAC,GAAGT,kBAAkB,KAAKQ,yBAAyB,GAAG,CAAC;IACnF,CAAC,MAAM;MACL;MACA;MACA;MACAC,qBAAqB,GAAG,CAAC,CAAC,GAAGT,kBAAkB,MAAMQ,yBAAyB,GAAGN,kBAAkB,CAAC,GAAG,CAAC;IAC1G;IAEA,OAAO;MACLR,QAAQ;MACRgB,UAAU,EAAEF,yBAAyB,GAAG,MAAM;MAAE;MAChDG,QAAQ,EAAEL,mBAAmB,GAAG,MAAM;MAAE;MACxCM,YAAY,EAAEV,kBAAkB;MAChCW,YAAY,EAAEJ;IAChB,CAAC;EACH,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,cAAc,GAAG3C,gBAAgB,CAACW,IAAI,CAACE,YAAY,CAAC;IAC1D,MAAM+B,YAAY,GAAG5C,gBAAgB,CAACW,IAAI,CAACG,iBAAiB,CAAC;IAC7D,MAAMQ,QAAQ,GAAGS,IAAI,CAACc,GAAG,CAACD,YAAY,GAAGD,cAAc,CAAC;IAExD,MAAM;MACJL,UAAU;MACVC,QAAQ;MACRC,YAAY;MACZC;IACF,CAAC,GAAGpB,wBAAwB,CAACC,QAAQ,EAAEX,IAAI,CAACM,WAAW,CAAC;IAExD,MAAM6B,QAAQ,GAAGnC,IAAI,CAACK,QAAQ,GAAG,GAAG,CAAC,CAAC;IACtC,MAAM+B,SAAS,GAAGD,QAAQ,IAAI,CAAC,GAAGL,YAAY,CAAC;IAE/CtB,cAAc,CAAC;MACbG,QAAQ;MACRgB,UAAU;MACVC,QAAQ;MACRC,YAAY;MACZC,YAAY;MACZM;IACF,CAAC,CAAC;IAEF3B,KAAK,CAAC;MACJ4B,KAAK,EAAE,4BAA4B;MACnCC,WAAW,EAAE,mBAAmB;MAChCC,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EAED,oBACErD,OAAA,CAAChB,GAAG;IAACsE,CAAC,EAAE,CAAE;IAACC,EAAE,EAAC,OAAO;IAACC,YAAY,EAAC,IAAI;IAACC,SAAS,EAAC,IAAI;IAACC,CAAC,EAAC,MAAM;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,eAC9E5D,OAAA,CAACf,MAAM;MAAC4E,OAAO,EAAE,CAAE;MAACC,KAAK,EAAC,SAAS;MAAAF,QAAA,gBACjC5D,OAAA,CAACP,OAAO;QAACsE,IAAI,EAAC,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAJ,QAAA,EAAC;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAEtDpE,OAAA,CAACd,MAAM;QAAC2E,OAAO,EAAE,CAAE;QAAAD,QAAA,gBACjB5D,OAAA,CAACb,WAAW;UAAAyE,QAAA,gBACV5D,OAAA,CAACZ,SAAS;YAAAwE,QAAA,EAAC;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACpCpE,OAAA,CAACV,MAAM;YACL+E,KAAK,EAAEzD,IAAI,CAACE,YAAa;YACzBwD,QAAQ,EAAGC,CAAC,IAAK1D,OAAO,CAAC;cAAE,GAAGD,IAAI;cAAEE,YAAY,EAAEyD,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAE;YAAAT,QAAA,EAEnEa,MAAM,CAACC,IAAI,CAACzE,gBAAgB,CAAC,CAAC0E,GAAG,CAACC,MAAM,iBACvC5E,OAAA;cAAqBqE,KAAK,EAAEO,MAAO;cAAAhB,QAAA,EAAEgB;YAAM,GAA9BA,MAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACrD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEdpE,OAAA,CAACb,WAAW;UAAAyE,QAAA,gBACV5D,OAAA,CAACZ,SAAS;YAAAwE,QAAA,EAAC;UAAkB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACzCpE,OAAA,CAACV,MAAM;YACL+E,KAAK,EAAEzD,IAAI,CAACG,iBAAkB;YAC9BuD,QAAQ,EAAGC,CAAC,IAAK1D,OAAO,CAAC;cAAE,GAAGD,IAAI;cAAEG,iBAAiB,EAAEwD,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAE;YAAAT,QAAA,EAExEa,MAAM,CAACC,IAAI,CAACzE,gBAAgB,CAAC,CAAC0E,GAAG,CAACC,MAAM,iBACvC5E,OAAA;cAAqBqE,KAAK,EAAEO,MAAO;cAAAhB,QAAA,EAAEgB;YAAM,GAA9BA,MAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACrD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAETpE,OAAA,CAACb,WAAW;QAAAyE,QAAA,gBACV5D,OAAA,CAACZ,SAAS;UAAAwE,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAC5BpE,OAAA,CAACX,KAAK;UACJgF,KAAK,EAAEzD,IAAI,CAACI,KAAM;UAClBsD,QAAQ,EAAGC,CAAC,IAAK1D,OAAO,CAAC;YAAE,GAAGD,IAAI;YAAEI,KAAK,EAAEuD,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAC7DQ,WAAW,EAAC;QAAyB;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eAEdpE,OAAA,CAACd,MAAM;QAAC2E,OAAO,EAAE,CAAE;QAAAD,QAAA,gBACjB5D,OAAA,CAACb,WAAW;UAAAyE,QAAA,gBACV5D,OAAA,CAACZ,SAAS;YAAAwE,QAAA,EAAC;UAAQ;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC/BpE,OAAA,CAACX,KAAK;YACJyF,IAAI,EAAC,QAAQ;YACbT,KAAK,EAAEzD,IAAI,CAACK,QAAS;YACrBqD,QAAQ,EAAGC,CAAC,IAAK1D,OAAO,CAAC;cAAE,GAAGD,IAAI;cAAEK,QAAQ,EAAE8D,MAAM,CAACR,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE,CAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC,eAEdpE,OAAA,CAACb,WAAW;UAAAyE,QAAA,gBACV5D,OAAA,CAACZ,SAAS;YAAAwE,QAAA,EAAC;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACnCpE,OAAA,CAACV,MAAM;YACL+E,KAAK,EAAEzD,IAAI,CAACM,WAAY;YACxBoD,QAAQ,EAAGC,CAAC,IAAK1D,OAAO,CAAC;cAAE,GAAGD,IAAI;cAAEM,WAAW,EAAEqD,CAAC,CAACC,MAAM,CAACH;YAAmC,CAAC,CAAE;YAAAT,QAAA,gBAEhG5D,OAAA;cAAQqE,KAAK,EAAC,SAAS;cAAAT,QAAA,EAAC;YAAW;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC5CpE,OAAA;cAAQqE,KAAK,EAAC,aAAa;cAAAT,QAAA,EAAC;YAAe;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAETpE,OAAA,CAACT,MAAM;QACLyF,WAAW,EAAC,MAAM;QAClBjB,IAAI,EAAC,IAAI;QACTkB,OAAO,EAAEtC,YAAa;QACtBuC,EAAE,EAAE,CAAE;QAAAtB,QAAA,EACP;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERjD,WAAW,iBACVnB,OAAA,CAAChB,GAAG;QAACkG,EAAE,EAAE,CAAE;QAAC5B,CAAC,EAAE,CAAE;QAACE,YAAY,EAAC,IAAI;QAACD,EAAE,EAAC,SAAS;QAAAK,QAAA,eAC9C5D,OAAA,CAACF,SAAS;UAAA8D,QAAA,gBACR5D,OAAA,CAACN,IAAI;YAAAkE,QAAA,gBACH5D,OAAA,CAACL,SAAS;cAAAiE,QAAA,EAAC;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC/BpE,OAAA,CAACJ,UAAU;cAAAgE,QAAA,GAAEzC,WAAW,CAACI,QAAQ,CAAC4D,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC7DpE,OAAA,CAACH,YAAY;cAAA+D,QAAA,EAAC;YAAkB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACPpE,OAAA,CAACN,IAAI;YAAAkE,QAAA,gBACH5D,OAAA,CAACL,SAAS;cAAAiE,QAAA,EAAC;YAAU;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACjCpE,OAAA,CAACJ,UAAU;cAAAgE,QAAA,GAAEzC,WAAW,CAACoB,UAAU,CAAC4C,OAAO,CAAC,CAAC,CAAC,EAAC,OAAK;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACjEpE,OAAA,CAACH,YAAY;cAAA+D,QAAA,EAAC;YAAmB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACPpE,OAAA,CAACN,IAAI;YAAAkE,QAAA,gBACH5D,OAAA,CAACL,SAAS;cAAAiE,QAAA,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAChCpE,OAAA,CAACJ,UAAU;cAAAgE,QAAA,GAAEzC,WAAW,CAACqB,QAAQ,CAAC2C,OAAO,CAAC,CAAC,CAAC,EAAC,OAAK;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC/DpE,OAAA,CAACH,YAAY;cAAA+D,QAAA,EAAC;YAAoB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACPpE,OAAA,CAACN,IAAI;YAAAkE,QAAA,gBACH5D,OAAA,CAACL,SAAS;cAAAiE,QAAA,EAAC;YAAa;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACpCpE,OAAA,CAACJ,UAAU;cAAAgE,QAAA,GAAEzC,WAAW,CAACsB,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC/DpE,OAAA,CAACH,YAAY;cAAA+D,QAAA,EAAC;YAAmB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACPpE,OAAA,CAACN,IAAI;YAAAkE,QAAA,gBACH5D,OAAA,CAACL,SAAS;cAAAiE,QAAA,EAAC;YAAa;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACpCpE,OAAA,CAACJ,UAAU;cAAAgE,QAAA,GAAE,CAACzC,WAAW,CAACuB,YAAY,GAAG,GAAG,EAAEyC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACvEpE,OAAA,CAACH,YAAY;cAAA+D,QAAA,EAAEhD,IAAI,CAACM,WAAW,KAAK,SAAS,GAAG,qBAAqB,GAAG;YAAyB;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAe,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7G,CAAC,eACPpE,OAAA,CAACN,IAAI;YAAAkE,QAAA,gBACH5D,OAAA,CAACL,SAAS;cAAAiE,QAAA,EAAC;YAAU;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACjCpE,OAAA,CAACJ,UAAU;cAAAgE,QAAA,GAAEzC,WAAW,CAAC6B,SAAS,CAACmC,OAAO,CAAC,CAAC,CAAC,EAAC,UAAQ;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACnEpE,OAAA,CAACH,YAAY;cAAA+D,QAAA,EAAC;YAAkB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACzD,EAAA,CAlNWD,UAAoB;EAAA,QAkBjBlB,QAAQ;AAAA;AAAA4F,EAAA,GAlBX1E,UAAoB;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}