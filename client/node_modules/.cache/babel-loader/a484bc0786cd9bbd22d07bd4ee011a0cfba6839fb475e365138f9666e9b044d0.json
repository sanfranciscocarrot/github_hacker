{"ast":null,"code":"var _jsxFileName = \"/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, VStack, HStack, FormControl, FormLabel, Input, Select, Button, Text, useToast, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatGroup, ScaleFade } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,\n  // 4.25 light years\n  'Alpha Centauri A': 271909.7,\n  // 4.3 light years\n  'Alpha Centauri B': 271909.7,\n  // 4.3 light years\n  'Barnard\\'s Star': 379446.6,\n  // 6.0 light years\n  'Wolf 359': 474308.3,\n  // 7.5 light years\n  'Lalande 21185': 515521.8,\n  // 8.15 light years\n  'Sirius A': 537549.4,\n  // 8.5 light years\n  'Sirius B': 537549.4,\n  // 8.5 light years\n\n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1e': 2529644.0,\n  // 40 light years\n  'TRAPPIST-1f': 2529644.0,\n  // 40 light years\n  'Kepler-186f': 3099814.0,\n  // 49 light years\n  'TOI-700d': 6324110.0,\n  // 100 light years\n\n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,\n  // 625 light years\n  'Vega': 158102750.0,\n  // 2500 light years\n  'Antares': 316205500.0,\n  // 5000 light years\n  'Deneb': 474308250.0,\n  // 7500 light years\n\n  // Galactic Features\n  'Orion Nebula': 853754850.0,\n  // 13,500 light years\n  'Galactic Center': 1580275000.0,\n  // 25,000 light years\n  'LMC': 3162055000.0 // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\nexport const TradePanel = () => {\n  _s();\n  const [form, setForm] = useState({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront'\n  });\n  const [calculation, setCalculation] = useState(null);\n  const [selectedSource, setSelectedSource] = useState(false);\n  const [selectedDest, setSelectedDest] = useState(false);\n  const toast = useToast();\n  const calculateTradeParameters = (distance, paymentType) => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const SECONDS_PER_YEAR = 31557600; // 365.25 * 24 * 60 * 60\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceMeters / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate interest based on proper time and time dilation\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n\n    // Calculate effective interest rate based on payment type\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment, the money could have been invested on Earth\n      // Use Earth time (coordinate time) for interest calculation\n      const earthYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      // The effective time for interest is the Earth time\n      const effectiveYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, effectiveYears) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = form.quantity * 1000; // Base cost per unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n    return {\n      distance,\n      travelTime: earthTimeDays,\n      shipTime: shipTimeDays,\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate,\n      totalCost\n    };\n  };\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"xl\",\n    boxShadow: \"lg\",\n    h: \"100%\",\n    overflowY: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        children: \"Interstellar Trade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        bg: \"gray.50\",\n        borderRadius: \"lg\",\n        border: \"1px\",\n        borderColor: \"gray.200\",\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          align: \"stretch\",\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 4,\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              flex: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Source Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: form.sourcePlanet,\n                onChange: e => setForm({\n                  ...form,\n                  sourcePlanet: e.target.value\n                }),\n                children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: planet,\n                  children: planet\n                }, planet, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), form.sourcePlanet && /*#__PURE__*/_jsxDEV(ScaleFade, {\n                in: true,\n                initialScale: 0.8,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  transition: \"all 0.5s ease-in-out\",\n                  transform: selectedSource ? \"scale(1.2)\" : \"scale(1)\",\n                  bg: selectedSource ? \"blue.50\" : \"transparent\",\n                  p: 2,\n                  borderRadius: \"md\",\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: selectedSource ? \"blue.600\" : \"gray.600\",\n                    mt: 1,\n                    fontWeight: selectedSource ? \"medium\" : \"normal\",\n                    children: CELESTIAL_BODY_INFO[form.sourcePlanet]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              flex: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Destination Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: form.destinationPlanet,\n                onChange: e => setForm({\n                  ...form,\n                  destinationPlanet: e.target.value\n                }),\n                children: Object.keys(PLANET_DISTANCES).map(planet => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: planet,\n                  children: planet\n                }, planet, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), form.destinationPlanet && /*#__PURE__*/_jsxDEV(ScaleFade, {\n                in: true,\n                initialScale: 0.8,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  transition: \"all 0.5s ease-in-out\",\n                  transform: selectedDest ? \"scale(1.2)\" : \"scale(1)\",\n                  bg: selectedDest ? \"blue.50\" : \"transparent\",\n                  p: 2,\n                  borderRadius: \"md\",\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: selectedDest ? \"blue.600\" : \"gray.600\",\n                    mt: 1,\n                    fontWeight: selectedDest ? \"medium\" : \"normal\",\n                    children: CELESTIAL_BODY_INFO[form.destinationPlanet]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Goods\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: form.goods,\n              onChange: e => setForm({\n                ...form,\n                goods: e.target.value\n              }),\n              placeholder: \"Enter goods description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              flex: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                min: \"1\",\n                value: form.quantity,\n                onChange: e => setForm({\n                  ...form,\n                  quantity: Math.max(1, Number(e.target.value))\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              flex: 1,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Payment Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: form.paymentType,\n                onChange: e => setForm({\n                  ...form,\n                  paymentType: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"upfront\",\n                  children: \"Pay Upfront\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"on_delivery\",\n                  children: \"Pay on Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            size: \"lg\",\n            onClick: handleSubmit,\n            mt: 2,\n            children: \"Calculate Trade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), calculation && /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        bg: \"gray.50\",\n        borderRadius: \"lg\",\n        border: \"1px\",\n        borderColor: \"gray.200\",\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(StatGroup, {\n          gap: 4,\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              fontWeight: \"medium\",\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              fontSize: \"2xl\",\n              children: [calculation.distance.toFixed(2), \" AU\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Astronomical Units\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              fontWeight: \"medium\",\n              children: \"Earth Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              fontSize: \"2xl\",\n              children: [calculation.travelTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"In stationary frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              fontWeight: \"medium\",\n              children: \"Ship Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              fontSize: \"2xl\",\n              children: [calculation.shipTime.toFixed(2), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Due to time dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              fontWeight: \"medium\",\n              children: \"Time Dilation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              fontSize: \"2xl\",\n              children: [calculation.timeDilation.toFixed(4), \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Relativistic factor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              fontWeight: \"medium\",\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              fontSize: \"2xl\",\n              children: [(calculation.interestRate * 100).toFixed(4), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              fontWeight: \"medium\",\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              fontSize: \"2xl\",\n              children: [calculation.totalCost.toFixed(2), \" credits\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: \"Including interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(TradePanel, \"JjlCtJLKrEqK/1QfC+jWAOtA97Y=\", false, function () {\n  return [useToast];\n});\n_c = TradePanel;\nvar _c;\n$RefreshReg$(_c, \"TradePanel\");","map":{"version":3,"names":["React","useState","Box","VStack","HStack","FormControl","FormLabel","Input","Select","Button","Text","useToast","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatGroup","ScaleFade","jsxDEV","_jsxDEV","PLANET_DISTANCES","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","CELESTIAL_BODY_INFO","TradePanel","_s","form","setForm","sourcePlanet","destinationPlanet","goods","quantity","paymentType","calculation","setCalculation","selectedSource","setSelectedSource","selectedDest","setSelectedDest","toast","calculateTradeParameters","distance","SPEED_OF_LIGHT","SHIP_SPEED_RATIO","SHIP_SPEED","AU_TO_METERS","SECONDS_PER_DAY","SECONDS_PER_YEAR","distanceMeters","timeDilationFactor","Math","sqrt","pow","earthTimeSeconds","shipTimeSeconds","earthTimeDays","shipTimeDays","BASE_INTEREST_RATE","effectiveInterestRate","earthYears","effectiveYears","baseCost","totalCost","travelTime","shipTime","timeDilation","interestRate","handleSubmit","sourceDistance","destDistance","abs","result","title","description","status","duration","isClosable","p","bg","borderRadius","boxShadow","h","overflowY","children","spacing","align","size","fileName","_jsxFileName","lineNumber","columnNumber","border","borderColor","alignItems","flex","value","onChange","e","target","Object","keys","map","planet","in","initialScale","transition","transform","fontSize","color","mt","fontWeight","placeholder","type","min","max","Number","colorScheme","onClick","gap","toFixed","_c","$RefreshReg$"],"sources":["/Users/sitewang/github_hackathon/client/src/components/TradePanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Text,\n  useToast,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatGroup,\n  ScaleFade,\n} from '@chakra-ui/react';\n\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Planet and star system data\n// Distances are stored in AU (1 light year = 63241.1 AU)\nconst PLANET_DISTANCES: Record<string, number> = {\n  // Solar System\n  Mercury: 0.387,\n  Venus: 0.723,\n  Earth: 1,\n  Mars: 1.524,\n  Jupiter: 5.203,\n  Saturn: 9.537,\n  Uranus: 19.191,\n  Neptune: 30.069,\n  \n  // Nearby Stars and Their Planets\n  'Proxima Centauri b': 268725.8,  // 4.25 light years\n  'Alpha Centauri A': 271909.7,    // 4.3 light years\n  'Alpha Centauri B': 271909.7,    // 4.3 light years\n  'Barnard\\'s Star': 379446.6,     // 6.0 light years\n  'Wolf 359': 474308.3,            // 7.5 light years\n  'Lalande 21185': 515521.8,       // 8.15 light years\n  'Sirius A': 537549.4,            // 8.5 light years\n  'Sirius B': 537549.4,            // 8.5 light years\n  \n  // Notable Exoplanets\n  'TRAPPIST-1d': 2529644.0,       // 40 light years\n  'TRAPPIST-1e': 2529644.0,       // 40 light years\n  'TRAPPIST-1f': 2529644.0,       // 40 light years\n  'Kepler-186f': 3099814.0,       // 49 light years\n  'TOI-700d': 6324110.0,          // 100 light years\n  \n  // Notable Star Systems\n  'Betelgeuse': 39525687.5,       // 625 light years\n  'Vega': 158102750.0,            // 2500 light years\n  'Antares': 316205500.0,         // 5000 light years\n  'Deneb': 474308250.0,           // 7500 light years\n  \n  // Galactic Features\n  'Orion Nebula': 853754850.0,    // 13,500 light years\n  'Galactic Center': 1580275000.0, // 25,000 light years\n  'LMC': 3162055000.0,            // 50,000 light years (Large Magellanic Cloud)\n};\n\n// Update the interface to include descriptions\ninterface TradeForm {\n  sourcePlanet: string;\n  destinationPlanet: string;\n  goods: string;\n  quantity: number;\n  paymentType: 'upfront' | 'on_delivery';\n}\n\n// Add planet descriptions\nconst CELESTIAL_BODY_INFO: Record<string, string> = {\n  Mercury: 'Innermost planet of the Solar System',\n  Venus: 'Second planet from the Sun, similar in size to Earth',\n  Earth: 'Our home planet',\n  Mars: 'The Red Planet, target for human colonization',\n  Jupiter: 'Largest planet in the Solar System',\n  Saturn: 'Known for its spectacular ring system',\n  Uranus: 'Ice giant with unique sideways rotation',\n  Neptune: 'The windiest planet in the Solar System',\n  'Proxima Centauri b': 'Closest known exoplanet to Earth, potentially habitable',\n  'Alpha Centauri A': 'Part of the closest star system to Earth',\n  'Alpha Centauri B': 'Binary companion to Alpha Centauri A',\n  'Barnard\\'s Star': 'One of the closest stars to Earth',\n  'Wolf 359': 'Small red dwarf star in Leo constellation',\n  'Lalande 21185': 'Red dwarf with confirmed exoplanets',\n  'Sirius A': 'Brightest star in Earth\\'s night sky',\n  'Sirius B': 'White dwarf companion to Sirius A',\n  'TRAPPIST-1d': 'Part of the TRAPPIST-1 system of seven Earth-like planets',\n  'TRAPPIST-1e': 'Most promising TRAPPIST-1 planet for habitability',\n  'TRAPPIST-1f': 'Water-rich world in the TRAPPIST-1 system',\n  'Kepler-186f': 'First Earth-sized planet discovered in habitable zone',\n  'TOI-700d': 'Earth-sized planet in its star\\'s habitable zone',\n  'Betelgeuse': 'Red supergiant star, could go supernova soon',\n  'Vega': 'Bright star and former North Star',\n  'Antares': 'Red supergiant star in Scorpius',\n  'Deneb': 'One of the most luminous known stars',\n  'Orion Nebula': 'Closest massive star formation region to Earth',\n  'Galactic Center': 'Supermassive black hole at the heart of the Milky Way',\n  'LMC': 'Largest satellite galaxy of the Milky Way'\n};\n\nexport const TradePanel: React.FC = () => {\n  const [form, setForm] = useState<TradeForm>({\n    sourcePlanet: 'Earth',\n    destinationPlanet: 'Mars',\n    goods: '',\n    quantity: 0,\n    paymentType: 'upfront',\n  });\n\n  const [calculation, setCalculation] = useState<{\n    distance: number;\n    travelTime: number;\n    shipTime: number;\n    interestRate: number;\n    totalCost: number;\n    timeDilation: number;\n  } | null>(null);\n\n  const [selectedSource, setSelectedSource] = useState(false);\n  const [selectedDest, setSelectedDest] = useState(false);\n\n  const toast = useToast();\n\n  const calculateTradeParameters = (distance: number, paymentType: 'upfront' | 'on_delivery') => {\n    // Constants\n    const SPEED_OF_LIGHT = 299792458; // m/s\n    const SHIP_SPEED_RATIO = 0.9; // 90% of light speed\n    const SHIP_SPEED = SPEED_OF_LIGHT * SHIP_SPEED_RATIO;\n    const AU_TO_METERS = 149597870700; // 1 AU in meters\n    const SECONDS_PER_DAY = 86400; // 24 * 60 * 60\n    const SECONDS_PER_YEAR = 31557600; // 365.25 * 24 * 60 * 60\n\n    // Calculate distance in meters\n    const distanceMeters = distance * AU_TO_METERS;\n\n    // Calculate time dilation factor (γ - gamma)\n    // γ = 1 / sqrt(1 - v²/c²)\n    const timeDilationFactor = 1 / Math.sqrt(1 - Math.pow(SHIP_SPEED_RATIO, 2));\n\n    // Calculate Earth time (coordinate time) in seconds\n    // t = d/v where d is distance and v is ship speed\n    const earthTimeSeconds = distanceMeters / SHIP_SPEED;\n\n    // Calculate ship time (proper time) in seconds\n    // t' = t/γ where t is Earth time and γ is time dilation factor\n    const shipTimeSeconds = earthTimeSeconds / timeDilationFactor;\n\n    // Convert to days\n    const earthTimeDays = earthTimeSeconds / SECONDS_PER_DAY;\n    const shipTimeDays = shipTimeSeconds / SECONDS_PER_DAY;\n\n    // Calculate interest based on proper time and time dilation\n    const BASE_INTEREST_RATE = 0.05; // 5% annual interest rate\n    \n    // Calculate effective interest rate based on payment type\n    let effectiveInterestRate;\n    if (paymentType === 'upfront') {\n      // For upfront payment, the money could have been invested on Earth\n      // Use Earth time (coordinate time) for interest calculation\n      const earthYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, earthYears) - 1;\n    } else {\n      // For payment on delivery, account for time dilation\n      // The effective time for interest is the Earth time\n      const effectiveYears = earthTimeSeconds / SECONDS_PER_YEAR;\n      effectiveInterestRate = Math.pow(1 + BASE_INTEREST_RATE, effectiveYears) - 1;\n    }\n\n    // Calculate total cost including interest\n    const baseCost = form.quantity * 1000; // Base cost per unit\n    const totalCost = baseCost * (1 + effectiveInterestRate);\n\n    return {\n      distance,\n      travelTime: earthTimeDays,\n      shipTime: shipTimeDays,\n      timeDilation: timeDilationFactor,\n      interestRate: effectiveInterestRate,\n      totalCost,\n    };\n  };\n\n  const handleSubmit = () => {\n    const sourceDistance = PLANET_DISTANCES[form.sourcePlanet];\n    const destDistance = PLANET_DISTANCES[form.destinationPlanet];\n    const distance = Math.abs(destDistance - sourceDistance);\n    \n    const result = calculateTradeParameters(distance, form.paymentType);\n    setCalculation(result);\n    \n    toast({\n      title: 'Trade Calculation Complete',\n      description: 'See results below',\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"xl\" boxShadow=\"lg\" h=\"100%\" overflowY=\"auto\">\n      <VStack spacing={6} align=\"stretch\">\n        <Heading size=\"lg\">Interstellar Trade</Heading>\n        \n        {/* Trade Form Panel */}\n        <Box \n          p={5} \n          bg=\"gray.50\" \n          borderRadius=\"lg\" \n          border=\"1px\" \n          borderColor=\"gray.200\"\n        >\n          <VStack spacing={4} align=\"stretch\">\n            <HStack spacing={4} alignItems=\"flex-start\">\n              <FormControl flex={1}>\n                <FormLabel>Source Location</FormLabel>\n                <Select\n                  value={form.sourcePlanet}\n                  onChange={(e) => setForm({ ...form, sourcePlanet: e.target.value })}\n                >\n                  {Object.keys(PLANET_DISTANCES).map(planet => (\n                    <option key={planet} value={planet}>{planet}</option>\n                  ))}\n                </Select>\n                {form.sourcePlanet && (\n                  <ScaleFade in={true} initialScale={0.8}>\n                    <Box\n                      transition=\"all 0.5s ease-in-out\"\n                      transform={selectedSource ? \"scale(1.2)\" : \"scale(1)\"}\n                      bg={selectedSource ? \"blue.50\" : \"transparent\"}\n                      p={2}\n                      borderRadius=\"md\"\n                    >\n                      <Text \n                        fontSize=\"sm\" \n                        color={selectedSource ? \"blue.600\" : \"gray.600\"} \n                        mt={1}\n                        fontWeight={selectedSource ? \"medium\" : \"normal\"}\n                      >\n                        {CELESTIAL_BODY_INFO[form.sourcePlanet]}\n                      </Text>\n                    </Box>\n                  </ScaleFade>\n                )}\n              </FormControl>\n\n              <FormControl flex={1}>\n                <FormLabel>Destination Location</FormLabel>\n                <Select\n                  value={form.destinationPlanet}\n                  onChange={(e) => setForm({ ...form, destinationPlanet: e.target.value })}\n                >\n                  {Object.keys(PLANET_DISTANCES).map(planet => (\n                    <option key={planet} value={planet}>{planet}</option>\n                  ))}\n                </Select>\n                {form.destinationPlanet && (\n                  <ScaleFade in={true} initialScale={0.8}>\n                    <Box\n                      transition=\"all 0.5s ease-in-out\"\n                      transform={selectedDest ? \"scale(1.2)\" : \"scale(1)\"}\n                      bg={selectedDest ? \"blue.50\" : \"transparent\"}\n                      p={2}\n                      borderRadius=\"md\"\n                    >\n                      <Text \n                        fontSize=\"sm\" \n                        color={selectedDest ? \"blue.600\" : \"gray.600\"} \n                        mt={1}\n                        fontWeight={selectedDest ? \"medium\" : \"normal\"}\n                      >\n                        {CELESTIAL_BODY_INFO[form.destinationPlanet]}\n                      </Text>\n                    </Box>\n                  </ScaleFade>\n                )}\n              </FormControl>\n            </HStack>\n\n            <FormControl>\n              <FormLabel>Goods</FormLabel>\n              <Input\n                value={form.goods}\n                onChange={(e) => setForm({ ...form, goods: e.target.value })}\n                placeholder=\"Enter goods description\"\n              />\n            </FormControl>\n\n            <HStack spacing={4}>\n              <FormControl flex={1}>\n                <FormLabel>Quantity</FormLabel>\n                <Input\n                  type=\"number\"\n                  min=\"1\"\n                  value={form.quantity}\n                  onChange={(e) => setForm({ ...form, quantity: Math.max(1, Number(e.target.value)) })}\n                />\n              </FormControl>\n\n              <FormControl flex={1}>\n                <FormLabel>Payment Type</FormLabel>\n                <Select\n                  value={form.paymentType}\n                  onChange={(e) => setForm({ ...form, paymentType: e.target.value as 'upfront' | 'on_delivery' })}\n                >\n                  <option value=\"upfront\">Pay Upfront</option>\n                  <option value=\"on_delivery\">Pay on Delivery</option>\n                </Select>\n              </FormControl>\n            </HStack>\n\n            <Button\n              colorScheme=\"blue\"\n              size=\"lg\"\n              onClick={handleSubmit}\n              mt={2}\n            >\n              Calculate Trade\n            </Button>\n          </VStack>\n        </Box>\n\n        {/* Results Panel */}\n        {calculation && (\n          <Box \n            p={5} \n            bg=\"gray.50\" \n            borderRadius=\"lg\" \n            border=\"1px\" \n            borderColor=\"gray.200\"\n            mt={4}\n          >\n            <StatGroup gap={4}>\n              <Stat>\n                <StatLabel fontWeight=\"medium\">Distance</StatLabel>\n                <StatNumber fontSize=\"2xl\">{calculation.distance.toFixed(2)} AU</StatNumber>\n                <StatHelpText>Astronomical Units</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel fontWeight=\"medium\">Earth Time</StatLabel>\n                <StatNumber fontSize=\"2xl\">{calculation.travelTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>In stationary frame</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel fontWeight=\"medium\">Ship Time</StatLabel>\n                <StatNumber fontSize=\"2xl\">{calculation.shipTime.toFixed(2)} days</StatNumber>\n                <StatHelpText>Due to time dilation</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel fontWeight=\"medium\">Time Dilation</StatLabel>\n                <StatNumber fontSize=\"2xl\">{calculation.timeDilation.toFixed(4)}x</StatNumber>\n                <StatHelpText>Relativistic factor</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel fontWeight=\"medium\">Interest Rate</StatLabel>\n                <StatNumber fontSize=\"2xl\">{(calculation.interestRate * 100).toFixed(4)}%</StatNumber>\n                <StatHelpText>{form.paymentType === 'upfront' ? 'For upfront payment' : 'For payment on delivery'}</StatHelpText>\n              </Stat>\n              <Stat>\n                <StatLabel fontWeight=\"medium\">Total Cost</StatLabel>\n                <StatNumber fontSize=\"2xl\">{calculation.totalCost.toFixed(2)} credits</StatNumber>\n                <StatHelpText>Including interest</StatHelpText>\n              </Stat>\n            </StatGroup>\n          </Box>\n        )}\n      </VStack>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}